{"version":3,"sources":["canvas/plugins/contextMenu/contextMenu.tsx","settings/default.tsx","canvas/plugins/selectedNodes.tsx","canvas/plugins/footer/footer.tsx","canvas/layouts.tsx","canvas/plugins/toolbar/handler.tsx","state/events.ts","state/manager.ts","canvas/plugins/hoveredItemInfo.tsx","canvas/plugins/toolbar/rightToolBar.tsx","canvas/plugins/toolbar/leftToolbar.tsx","components/displaySettings/nodeDisplaySettings.tsx","canvas/colorUtils.tsx","components/find/findAndFocus.tsx","components/export/exportCanvas.tsx","components/canvas/canvas.tsx","components/welcome/welcome.tsx","views/examples.tsx","views/edge.tsx","views/index.tsx","index.js"],"names":["NodeContextMenu","value","model","item","get","console","log","primaryColor","style","keyshape","stroke","react_default","a","createElement","className","borderTopColor","color","icon","fontFamily","label","id","Object","keys","properties","map","key","index","defaultNodeStyle","Utils","getNodeStyleByTheme","nodeSize","mode","miniMapOptions","size","ShowSelectedNodes","props","_useContext","useContext","GraphinContext","graph","apis","selectedNodes","stateManager","useEffect","handleSelectChanged","evt","selectedItems","nodes","length","setSelectedNodes","handleStateChanged","findAllByState","on","off","node","Button","onClick","focusOnNode","borderColor","variant","toString","CloseSquareOutlined","setItemState","removeActiveNode","top","position","Footer","selectedNode","dangerouslySetInnerHTML","__html","messageText","layoutsOptions","type","preventOverlap","preventOverlapPadding","workerEnabled","options","center","linkDistance","maxIteration","focusNode","unitRadius","strictRadial","nodeStrength","edgeStrength","collideStrength","alpha","alphaDecay","alphaMin","onTick","onLayoutEnd","gpuEnabled","maxLevelDiff","sortBy","rankdir","handleToolBarClick","graphinContext","config","handleZoomIn","handleZoomOut","keyCode","addItem","x","y","layout","endsWith","layoutData","find","replace","setLayoutSettings","rightModal","setRightModal","fitView","clear","autoPaint","setAutoPaint","render","paint","fitCenter","Event","message","state","classCallCheck","this","created_at","Date","debug","concat","EVENT_TYPES","welcome","updateLayout","StateManager","setMessageText","setHoveredItem","setNodeDisplaySettings","setEdgeDisplaySettings","layoutSettings","hoveredItem","nodeDisplaySettings","edgeDisplaySettings","setLayoutSettings_","data","event","commit","focusNodeById","getID","toFront","HoveredItemInfo","createItemText","handleNodeMouseEnter","handleNodeMouseLeave","handleEdgeMouseEnter","handleEdgeMouseLeave","rightToolBarOptions","name","OverlayTrigger","placement","overlay","Tooltip","SearchOutlined","ExportOutlined","SettingOutlined","leftToolBarOptions","ClearOutlined","RedoOutlined","ZoomOutOutlined","ZoomInOutlined","FullscreenExitOutlined","ShareAltOutlined","DeploymentUnitOutlined","AppstoreOutlined","PartitionOutlined","NodeDisplaySettings","Card","Header","Body","Text","nodeLabel","nodeSetting","FloatingLabel","controlId","Form","Control","minHeight","as","placeholder","JSON","stringify","edgeLabel","edgeSetting","IconsPalette","Graphin","registerFontFamily","iconLoader","pastel_colour","str","hash","i","charCodeAt","colour","substr","createNode","originalId","styleData","nodeColor","nodeIcon","iconSize","nodeShape","labelPropertyKey","fill","fillOpacity","strokeOpacity","generateNodeStyle","assign","applyStylingToNodes","applyStylingToEdges","edges","edge","labelType","sourceOriginal","source","targetOriginal","target","edgeColor","background","radius","createEdge","applyStylesToData","FindAndFocus","_React$useState","React","useState","_React$useState2","slicedToArray","filteredItems","setFilteredItems","onChange","e","searchStr","findAll","match","RegExp","searchString","ListGroup","filteredItem","Item","cursor","nodeId","ExportCanvas","downloadImage","DragCanvas","Behaviors","ZoomCanvas","ClickSelect","BrushSelect","DragNode","LassoSelect","DragCombo","ActivateRelations","Hoverable","MiniMap","Components","ContextMenu","SnapLine","line","lineWidth","GraphCanvas","_ref","containerId","width","height","initState","welcomeComponent","_React$useState3","_React$useState4","_React$useState5","_React$useState6","_React$useState7","_React$useState8","_React$useState9","_React$useState10","_React$useState11","_React$useState12","_React$useState13","_React$useState14","processedData","paddingTop","es","objectSpread","visible","Grid","enableOptimize","canvas_plugins_selectedNodes","left","hoveredItemInfo","maxHeight","bindType","contextMenu_NodeContextMenu","displaySettings_nodeDisplaySettings","findAndFocus","exportCanvas","Toolbar","right","footer_footer","WelcomeToCanvas","ExamplesView","selectedCanvas","setSelectedCanvas","padding","components_canvas_canvas","authorStoryData","authorStoryInitState","flightStoryData","flightStoryInitState","blankStoryData","blankStoryInitState","Fragment","capFirst","s","charAt","toUpperCase","slice","getRandomInt","min","max","Math","floor","random","EdgeCanvasView","canvasStoreExamples","canvas_id","helloWorldStoryData","helloWorldInitState","created","canvasStore","setCanvasStore","href","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","canvas","canvasKey","canvasStore__","parse","unshift","createNewCanvas","name1","name2","generateName","App","selected","setSelected","examples","rootElement","document","getElementById","createRoot","react","views"],"mappings":"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,WAAY,SAAU,YAAa,UAAW,MAAO,QAAS,QAAS,OAAQ,QAAS,OAAQ,OAAQ,QAAS,QAAS,SAAU,OAAQ,SAAU,YAAa,OAAQ,UAAW,OAAQ,aAAc,SAAU,QAAS,UAAW,MAAO,QAAS,SAAU,SAAU,OAAQ,SAAU,UAAW,QAAS,OAAQ,OAAQ,UAAW,UAAW,SAAU,UAAW,UAAW,MAAO,OAAQ,QAAS,OAAQ,YAAa,UAAW,SAAU,MAAO,OAAQ,MAAO,UAAW,QAAS,SAAU,UAAW,OAAQ,SAAU,OAAQ,OAAQ,OAAQ,QAAS,UAAW,YAAa,SAAU,OAAQ,OAAQ,QAAS,SAAU,OAAQ,QAAS,WAAY,OAAQ,SAAU,QAAS,UAAW,OAAQ,SAAU,QAAS,QAAS,QAAS,OAAQ,QAAS,SAAU,QAAS,SAAU,OAAQ,MAAO,YAAa,SAAU,OAAQ,OAAQ,OAAQ,SAAU,WAAY,UAAW,OAAQ,UAAW,QAAS,QAAS,SAAU,OAAQ,SAAU,SAAU,SAAU,WAAY,OAAQ,SAAU,SAAU,SAAU,UAAW,QAAS,YAAa,WAAY,MAAO,QAAS,QAAS,QAAS,UAAW,OAAQ,SAAU,WAAY,YAAa,OAAQ,OAAQ,WAAY,MAAO,SAAU,OAAQ,UAAW,QAAS,SAAU,OAAQ,OAAQ,UAAW,OAAQ,OAAQ,SAAU,OAAQ,aAAc,QAAS,OAAQ,SAAU,QAAS,QAAS,QAAS,SAAU,SAAU,MAAO,WAAY,UAAW,OAAQ,YAAa,SAAU,QAAS,OAAQ,QAAS,UAAW,OAAQ,MAAO,SAAU,MAAO,QAAS,YAAa,WAAY,OAAQ,SAAU,SAAU,SAAU,SAAU,OAAQ,OAAQ,OAAQ,QAAS,aAAc,OAAQ,OAAQ,UAAW,OAAQ,WAAY,UAAW,MAAO,QAAS,SAAU,QAAS,SAAU,OAAQ,QAAS,OAAQ,YAAa,aAAc,WAAY,SAAU,SAAU,MAAO,QAAS,OAAQ,QAAS,SAAU,MAAO,UAAW,OAAQ,QAAS,OAAQ,OAAQ,QAAS,QAAS,OAAQ,SAAU,QAAS,YAAa,OAAQ,QAAS,YAAa,MAAO,QAAS,QAAS,QAAS,QAAS,gBAAiB,QAAS,OAAQ,SAAU,OAAQ,YAAa,MAAO,OAAQ,UAAW,OAAQ,WAAY,QAAS,QAAS,MAAO,OAAQ,SAAU,OAAQ,OAAQ,SAAU,QAAS,OAAQ,OAAQ,QAAS,OAAQ,WAAY,YAAa,MAAO,OAAQ,UAAW,SAAU,QAAS,MAAO,WAAY,OAAQ,OAAQ,SAAU,SAAU,YAAa,OAAQ,OAAQ,YAAa,QAAS,UAAW,MAAO,SAAU,UAAW,OAAQ,UAAW,UAAW,UAAW,OAAQ,UAAW,WAAY,WAAY,YAAa,MAAO,SAAU,UAAW,MAAO,SAAU,MAAO,OAAQ,SAAU,OAAQ,OAAQ,QAAS,WAAY,YAAa,QAAS,OAAQ,YAAa,UAAW,YAAa,OAAQ,QAAS,MAAO,QAAS,UAAW,SAAU,QAAS,OAAQ,UAAW,OAAQ,UAAW,WAAY,OAAQ,QAAS,WAAY,UAAW,UAAW,QAAS,SAAU,QAAS,OAAQ,SAAU,OAAQ,WAAY,WAAY,QAAS,UAAW,SAAU,UAAW,QAAS,WAAY,OAAQ,QAAS,OAAQ,MAAO,QAAS,YAAa,MAAO,OAAQ,SAAU,SAAU,SAAU,UAAW,QAAS,QAAS,OAAQ,QAAS,QAAS,WAAY,QAAS,OAAQ,SAAU,QAAS,MAAO,OAAQ,QAAS,OAAQ,QAAS,QAAS,YAAa,SAAU,OAAQ,OAAQ,SAAU,UAAW,SAAU,UAAW,MAAO,OAAQ,QAAS,UAAW,SAAU,QAAS,UAAW,OAAQ,SAAU,SAAU,OAAQ,QAAS,SAAU,OAAQ,MAAO,OAAQ,OAAQ,QAAS,MAAO,QAAS,QAAS,SAAU,OAAQ,SAAU,UAAW,aAAc,QAAS,OAAQ,OAAQ,OAAQ,QAAS,SAAU,QAAS,UAAW,WAAY,QAAS,OAAQ,QAAS,OAAQ,QAAS,SAAU,MAAO,WAAY,QAAS,QAAS,QAAS,WAAY,OAAQ,aAAc,UAAW,UAAW,OAAQ,QAAS,OAAQ,UAAW,OAAQ,QAAS,SAAU,QAAS,SAAU,QAAS,QAAS,UAAW,UAAW,SAAU,cAAe,OAAQ,OAAQ,SAAU,UAAW,OAAQ,SAAU,OAAQ,UAAW,QAAS,SAAU,OAAQ,OAAQ,QAAS,QAAS,OAAQ,aAAc,SAAU,SAAU,QAAS,OAAQ,OAAQ,QAAS,QAAS,MAAO,SAAU,OAAQ,MAAO,OAAQ,QAAS,SAAU,MAAO,WAAY,UAAW,QAAS,UAAW,MAAO,QAAS,WAAY,WAAY,QAAS,QAAS,MAAO,OAAQ,YAAa,WAAY,SAAU,OAAQ,OAAQ,MAAO,MAAO,OAAQ,QAAS,QAAS,UAAW,MAAO,QAAS,SAAU,QA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","file":"static/js/main.b44fee47.chunk.js","sourcesContent":["import {ContextMenuValue} from \"@antv/graphin\";\nimport React from \"react\";\nimport \"./contextMenu.css\"\nimport {INode} from \"@antv/g6\";\n\n\nexport const NodeContextMenu = (value: ContextMenuValue) => {\n    // const handleClick = (evt: React.MouseEvent<Element, MouseEvent>) => {\n    //     const {onClose, id} = value;\n    //     const target = evt.target as HTMLElement;\n    //     let code = target.getAttribute(\"data-code\");\n    //     // console.log(\"===menu item clicked\", `${e.code}:${id}`);\n    //     console.log(\"===menu item clicked\", code);\n    //     // message.info(`${e.key}:${id}`);\n    //     onClose();\n    // };\n    // @ts-ignore\n    const model = value.item.get(\"model\");\n    console.log(\"model\", model)\n    if (model) {\n        const primaryColor = model.style.keyshape.stroke;\n\n        return (\n            <div className={\"contextMenu\"} style={{borderTopColor: primaryColor}}>\n                <h4 style={{color: primaryColor}}>\n                    {model.style.icon ? <span className=\"icon-foo\"\n                                              style={{fontFamily: model.style.icon.fontFamily,}}>\n                {model.style.icon.value}</span> : <span></span>}\n                    {model.label} </h4>\n                <p className={\"small border-bottom pb-2 mb-0\"}>ID: {model.id}</p>\n                <div className={\"properties\"}>\n                    <div className=\"header text-uppercase mb-2 p-2 \">Properties</div>\n                    <div className=\"body\">\n                        {Object.keys(model.properties || {}).map((key, index) => {\n                            if (model) {\n                                return (<div className={\"propertyItem border-bottom pb-1 \"}>\n                                    <h6 className={\"mb-1\"}>{key} :</h6>\n                                    <p className={\"mb-1\"}>{model.properties[key]}</p>\n                                </div>)\n                            }\n                        })\n                        }\n                    </div>\n                </div>\n\n            </div>\n\n        );\n    }\n    return (<div/>)\n};\n","import {Utils} from \"@antv/graphin\";\n\n\nexport const defaultLayoutSettings = {\n    type: \"grid\",\n    preventOverlap: true\n};\n\nexport const defaultNodeStyle = Utils.getNodeStyleByTheme({\n    nodeSize: 40,\n    primaryColor: \"green\",\n    mode: \"dark\"\n});\n\n\nexport const miniMapOptions = {size: [250, 150]};\n\n","import React, {useContext, useEffect, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {ContextMenuValue, GraphinContext, IG6GraphEvent} from \"@antv/graphin\";\nimport {INode, NodeConfig} from '@antv/g6';\nimport Button from 'react-bootstrap/Button';\nimport {CloseSquareOutlined} from \"@ant-design/icons\"\nimport \"./selectedNodes.css\";\n\n// @ts-ignore\nfunction ShowSelectedNodes(props: any) {\n    console.log(\"ShowSelectedNodes props\", props)\n    const {graph, apis} = useContext(GraphinContext);\n    const {selectedNodes, stateManager} = props\n\n    const focusOnNode = (node: INode) => {\n        // const model = node.getModel() as NodeConfig;\n        stateManager.focusOnNode(apis, node);\n    };\n    useEffect(() => {\n        console.log(\"ShowSelectedNodes useEffect\")\n        const handleSelectChanged = (evt: IG6GraphEvent) => {\n            console.log(\"handleSelectChanged\", evt.selectedItems)\n            // @ts-ignore\n            const nodes = evt.selectedItems.nodes;\n            // @ts-ignore\n            if (nodes.length !== selectedNodes.length) {\n                stateManager.setSelectedNodes(nodes)\n            }\n        };\n        const handleStateChanged = (evt: IG6GraphEvent) => {\n            console.log(\"handleStateChanged\", evt.selectedItems)\n            // @ts-ignore\n            const nodes = graph.findAllByState('node', 'selected')\n            // @ts-ignore\n            stateManager.setSelectedNodes(nodes)\n        };\n\n        graph.on('nodeselectchange', handleSelectChanged);\n        graph.on('afteritemstatechange', handleStateChanged);\n        return () => {\n            graph.off('nodeselectchange', handleSelectChanged);\n            graph.off('afteritemstatechange', handleStateChanged);\n        };\n    }, []);\n\n    const removeActiveNode = (node: INode) => {\n        console.log(\"removeActiveNode\", node)\n        graph.setItemState(node, \"selected\", false)\n    }\n    return (\n        <div className={\"selectedNodes\"} style={props.style}>\n            {selectedNodes.map((node: INode) => {\n                const model = node.get(\"model\")\n                console.log(\"model+++\", model)\n                if (model) {\n                    return (\n                        // @ts-ignore\n                        <Button className=\"me-3 selectedNode\" size=\"sm\"\n                                onClick={() => focusOnNode(node)}\n                                style={{\n                                    borderColor: model.style.keyshape.stroke,\n                                    color: model.style.keyshape.stroke,\n                                }}\n                                variant=\"outline-secondary\" key={model.id}>\n                            {\n                                model.style.icon? <span className=\"icon-foo me-1\"\n                                  style={{fontFamily: model.style.icon.fontFamily,}}>\n                {model.style.icon.value}</span> : <span />\n                            }\n\n                            {model.style.label.value.toString()}\n                            <CloseSquareOutlined\n                                className={\"ms-1\"}\n                                onClick={() => removeActiveNode(node)}\n                                style={{\"top\": \"-2px\", \"position\": \"relative\"}}/>\n                        </Button>\n                    )\n                }\n            })}\n        </div>\n    )\n}\n\nShowSelectedNodes.propTypes = {\n    selectedNodes: PropTypes.any,\n    stateManager: PropTypes.any,\n    style: PropTypes.object\n}\nexport default ShowSelectedNodes\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./footer.css\"\nimport {INode} from \"@antv/g6\";\n\n\n\n\n\n// @ts-ignore\nfunction Footer(props: any) {\n    const selectedNode = props.selectedNodes[0] ? props.selectedNodes.length == 1 : null\n    return (\n        <div className=\"graphin-components-footer\" style={props.style}>\n            <div className=\"statusMessage float-start pt-1\"><span dangerouslySetInnerHTML={{__html: props.messageText}}></span></div>\n            <div className={\"nodeSettings float-end\"}>{selectedNode &&\n                <div>node settings here</div>\n            }</div>\n        </div>\n    )\n}\n\nFooter.propTypes = {\n    style: PropTypes.object,\n    messageText: PropTypes.string,\n    selectedNodes: PropTypes.any\n}\nexport default Footer","export const layoutsOptions = [\n    {\n        type: 'graphin-force',\n        label: 'graphin-force',\n    },\n    {\n        type: 'grid',\n        label: 'grid',\n        // begin: [0, 0], // 可选，\n        preventOverlap: true, // 可选，必须配合 nodeSize\n        preventOverlapPadding: 20, // 可选\n        // nodeSize: 30, // 可选\n        // condense: false, // 可选\n        // rows: 5, // 可选\n        // cols: 5, // 可选\n        // sortBy: 'degree', // 可选\n        workerEnabled: true, // 可选，开启 web-worker\n    },\n    {\n        type: 'circular',\n        label: 'circular',\n        options: {\n            // center: [0, 0], // 可选，默认为图的中心\n            // radius: null, // 可选\n            // startRadius: 10, // 可选\n            // endRadius: 100, // 可选\n            // clockwise: false, // 可选\n            // divisions: 5, // 可选\n            // ordering: 'degree', // 可选\n            // // angleRatio: 1, // 可选\n        }\n    },\n    {\n        type: 'radial',\n        label: 'radial',\n        options: {\n            center: [0, 0], // 可选，默认为图的中心\n            linkDistance: 150, // 可选，边长\n            maxIteration: 1000, // 可选\n            focusNode: 'node11', // 可选\n            unitRadius: 100, // 可选\n            preventOverlap: true, // 可选，必须配合 nodeSize\n            nodeSize: 30, // 可选\n            strictRadial: false, // 可选\n            workerEnabled: false, // 可选，开启 web-worker\n        }\n    },\n    {\n        type: 'force',\n        label: 'force',\n\n        preventOverlap: true,\n        // center: [200, 200], // 可选，默认为图的中心\n        linkDistance: 50, // 可选，边长\n        nodeStrength: 30, // 可选\n        edgeStrength: 0.8, // 可选\n        collideStrength: 0.8, // 可选\n        nodeSize: 30, // 可选\n        alpha: 0.9, // 可选\n        alphaDecay: 0.3, // 可选\n        alphaMin: 0.01, // 可选\n        // forceSimulation: null, // 可选\n        onTick: () => {\n            // 可选\n            console.log('ticking');\n        },\n        onLayoutEnd: () => {\n            // 可选\n            console.log('force layout done');\n        },\n    },\n    {\n        type: 'gForce',\n        label: 'gForce',\n        linkDistance: 150, // 可选，边长\n        nodeStrength: 30, // 可选\n        edgeStrength: 0.1, // 可选\n        nodeSize: 30, // 可选\n        onTick: () => {\n            // 可选\n            console.log('ticking');\n        },\n        onLayoutEnd: () => {\n            // 可选\n            console.log('force layout done');\n        },\n        workerEnabled: false, // 可选，开启 web-worker\n        gpuEnabled: false, // 可选，开启 GPU 并行计算，G6 4.0 支持\n    },\n    {\n        type: 'concentric',\n        label: 'concentric',\n        maxLevelDiff: 0.5,\n        sortBy: 'degree',\n        // center: [200, 200], // 可选，\n        // linkDistance: 50, // 可选，边长\n        // preventOverlap: true, // 可选，必须配合 nodeSize\n        // nodeSize: 30, // 可选\n        // sweep: 10, // 可选\n        // equidistant: false, // 可选\n        // startAngle: 0, // 可选\n        // clockwise: false, // 可选\n        // maxLevelDiff: 10, // 可选\n        // sortBy: 'degree', // 可选\n        // workerEnabled: false, // 可选，开启 web-worker\n    },\n    {\n        type: 'dagre',\n        label: 'dagre',\n        rankdir: 'LR', // 可选，默认为图的中心\n        // align: 'DL', // 可选\n        // nodesep: 20, // 可选\n        // ranksep: 50, // 可选\n        // controlPoints: true, // 可选\n    },\n    {\n        type: 'fruchterman',\n        label: 'fruchterman',\n        // center: [200, 200], // 可选，默认为图的中心\n        // gravity: 20, // 可选\n        // speed: 2, // 可选\n        // clustering: true, // 可选\n        // clusterGravity: 30, // 可选\n        // maxIteration: 2000, // 可选，迭代次数\n        // workerEnabled: false, // 可选，开启 web-worker\n        // gpuEnabled: false, // 可选，开启 GPU 并行计算，G6 4.0 支持\n    },\n];","import {GraphinContextType} from \"@antv/graphin/lib/GraphinContext\";\nimport {layoutsOptions} from \"../../layouts\";\n\n// const handleLayoutChange = (value: any) => {\n//     console.log('value', value);\n//     setState(value);\n// };\nexport const handleToolBarClick = (graphinContext: GraphinContextType, config: any, stateManager: any) => {\n    const {apis, graph} = graphinContext;\n    const {handleZoomIn, handleZoomOut} = apis;\n    const keyCode = config.key;\n    if (keyCode === \"zoomIn\") {\n        handleZoomOut(); // for some weird reason, this is correct\n    } else if (keyCode === \"zoomOut\") {\n        handleZoomIn(); // for some weird reason, this is correct\n    } else if (keyCode === \"add-data\") {\n        graph.addItem(\"node\", {\n            id: \"node2\",\n            label: \"node2\",\n            x: 300,\n            y: 150\n        });\n        graph.layout()\n    } else if (keyCode.endsWith(\"-layout\")) {\n        const layoutData = layoutsOptions.find(item => item.type === keyCode.replace(\"-layout\", \"\"));\n        stateManager.setLayoutSettings(layoutData)\n    } else if (keyCode === \"screenshot\") {\n        console.log(\"Screenshow \");\n        if (stateManager.rightModal === \"showExportCanvas\") {\n            stateManager.setRightModal(null)\n        } else {\n            stateManager.setRightModal(\"showExportCanvas\")\n        }\n    } else if (keyCode === \"fit-center\") {\n        graph.fitView()\n    } else if (keyCode === \"canvas-clear\") {\n        graph.clear()\n    } else if (keyCode === \"canvas-redraw\") {\n        const autoPaint = graph.get('autoPaint');\n        graph.setAutoPaint(false);\n        graph.render();\n        graph.paint();\n        graph.setAutoPaint(autoPaint);\n        graph.fitCenter()\n\n    } else if (keyCode === \"display-settings\") {\n        if (stateManager.rightModal === \"showDisplaySettings\") {\n            stateManager.setRightModal(null)\n        } else {\n            stateManager.setRightModal(\"showDisplaySettings\")\n        }\n    } else if (keyCode === \"find-and-focus\") {\n        if (stateManager.rightModal === \"showFindAndFocus\") {\n            stateManager.setRightModal(null)\n        } else {\n            stateManager.setRightModal(\"showFindAndFocus\")\n        }\n    }\n\n};\n\n","class EventTypes {\n    welcome = \"WELCOME\"\n    updateLayout = \"LAYOUT_UPDATE\"\n\n\n}\n\nclass Event {\n    type = null\n    message = null\n    state= null\n    created_at = null\n\n    constructor(type: string, message: string, state: any) {\n        // @ts-ignore\n        this.created_at = new Date();\n        // @ts-ignore\n        this.type = type;\n        // @ts-ignore\n        this.message = message;\n        this.state = state\n    }\n\n    commit(){\n        console.debug(`event created type=\"${this.type}\" message=\"${this.message}\"`)\n        return this;\n    }\n\n}\nexport default Event;\nexport const EVENT_TYPES = new EventTypes()\n","import PropTypes from \"prop-types\";\nimport Event, {EVENT_TYPES} from \"./events\";\n\n\nexport default class StateManager {\n    setLayoutSettings_ = null\n    setSelectedNodes = null\n    setMessageText = null\n    setHoveredItem = null\n    // setShowDisplaySettings = null\n    setNodeDisplaySettings = null\n    setEdgeDisplaySettings = null\n    // setShowFindAndFocus = null\n    // setExportCanvas = null\n    rightModal = null\n\n\n    layoutSettings = null\n    selectedNodes = null\n    messageText = null\n    hoveredItem = null\n    // showDisplaySettings = null\n    nodeDisplaySettings = null\n    edgeDisplaySettings = null\n    // showFindAndFocus = null\n    // showExportCanvas= null\n    setRightModal = null\n\n    // @ts-ignore\n    constructor(setLayoutSettings: PropTypes.func, setSelectedNodes: PropTypes.func,\n                // @ts-ignore\n                setMessageText: PropTypes.func, setHoveredItem: PropTypes.func,\n                // setShowDisplaySettings: PropTypes.func,\n                // @ts-ignore\n                setNodeDisplaySettings: PropTypes.func, setEdgeDisplaySettings: PropTypes.func,\n                // setShowFindAndFocus: PropTypes.func,\n                //@ts-ignore\n                setRightModal: PropTypes.func,\n                // @ts-ignore\n                layoutSettings: PropTypes.object, selectedNodes: PropTypes.object, messageText: PropTypes.object,\n                // @ts-ignore\n                hoveredItem: PropTypes.object,\n                // showDisplaySettings: PropTypes.object,\n                // @ts-ignore\n                nodeDisplaySettings: PropTypes.object, edgeDisplaySettings: PropTypes.object,\n                // showFindAndFocus: PropTypes.bool, showExportCanvas: PropTypes.bool\n                // @ts-ignore\n                rightModal: PropTypes.string,\n    ) {\n        this.setLayoutSettings_ = setLayoutSettings\n        this.setSelectedNodes = setSelectedNodes\n        this.setMessageText = setMessageText\n        this.setHoveredItem = setHoveredItem\n        // this.setShowDisplaySettings = setShowDisplaySettings\n        this.setNodeDisplaySettings = setNodeDisplaySettings\n        this.setEdgeDisplaySettings = setEdgeDisplaySettings\n        // this.setShowFindAndFocus = setShowFindAndFocus\n        // this.setExportCanvas = setExportCanvas\n        this.setRightModal = setRightModal\n\n        this.layoutSettings = layoutSettings\n        this.selectedNodes = selectedNodes\n        this.messageText = messageText\n        this.hoveredItem = hoveredItem\n        // this.showDisplaySettings = showDisplaySettings\n        this.nodeDisplaySettings = nodeDisplaySettings\n        this.edgeDisplaySettings = edgeDisplaySettings\n        // this.showFindAndFocus = showFindAndFocus\n        // this.showExportCanvas = showExportCanvas\n        this.rightModal = rightModal\n\n    }\n\n\n    setLayoutSettings(data: any) {\n        // @ts-ignore\n        console.log(\"setLayoutSettings\", data)\n        const event = new Event(EVENT_TYPES.updateLayout, `Updated to ${data.label} layout`, data).commit();\n        // @ts-ignore\n        this.setMessageText(event.message)\n        // @ts-ignore\n        this.setLayoutSettings_(data)\n    }\n\n    focusOnNode(apis: any, node: any) {\n        apis.focusNodeById(node.getID());\n        node.toFront();\n    }\n\n    // showDisplaySettings() {\n    //     // @ts-ignore\n    //     this.setShowDisplaySettings(true)\n    // }\n\n}","import React, {useContext, useEffect, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {ContextMenuValue, GraphinContext, IG6GraphEvent} from \"@antv/graphin\";\nimport {INode, NodeConfig} from '@antv/g6';\nimport Button from 'react-bootstrap/Button';\nimport {CloseSquareOutlined} from \"@ant-design/icons\"\n\n// @ts-ignore\nfunction HoveredItemInfo(props: any) {\n    console.log(\"ShowSelectedNodes props\", props)\n    const {graph, apis} = useContext(GraphinContext);\n\n    const createItemText = (model: any) => {\n        return `<strong>${model.label}</strong>[id:${model.id}]`\n    }\n\n    useEffect(() => {\n\n        var handleNodeMouseEnter = function handleNodeMouseEnter(evt: IG6GraphEvent) {\n            // @ts-ignore\n            const model = evt.item.get(\"model\");\n            props.stateManager.setHoveredItem(evt.item)\n            // @ts-ignore\n            props.stateManager.setMessageText(`Hovered on Node: ${createItemText(model)}`)\n        }; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n        var handleNodeMouseLeave = function handleNodeMouseLeave(evt: IG6GraphEvent) {\n            props.stateManager.setHoveredItem(null)\n            props.stateManager.setMessageText(null)\n        }; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n        var handleEdgeMouseEnter = function handleEdgeMouseEnter(evt: IG6GraphEvent) {\n            // @ts-ignore\n            const model = evt.item.get(\"model\");\n            console.log(\"====model\", model)\n            props.stateManager.setHoveredItem(evt.item)\n            // @ts-ignore\n            props.stateManager.setMessageText(`Hovered on Edge: ${createItemText(model)}`)\n\n        }; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n        var handleEdgeMouseLeave = function handleEdgeMouseLeave(evt: IG6GraphEvent) {\n            props.stateManager.setHoveredItem(null)\n            props.stateManager.setMessageText(null)\n        };\n\n        graph.on('node:mouseenter', handleNodeMouseEnter);\n        graph.on('node:mouseleave', handleNodeMouseLeave);\n\n        graph.on('edge:mouseenter', handleEdgeMouseEnter);\n        graph.on('edge:mouseleave', handleEdgeMouseLeave);\n\n        return function () {\n            graph.off('node:mouseenter', handleNodeMouseEnter);\n            graph.off('node:mouseleave', handleNodeMouseLeave);\n\n            graph.off('edge:mouseenter', handleEdgeMouseEnter);\n            graph.off('edge:mouseleave', handleEdgeMouseLeave);\n        };\n    }, []);\n    return (<div/>)\n\n}\n\nHoveredItemInfo.propTypes = {\n    stateManager: PropTypes.any,\n}\nexport default HoveredItemInfo\n","import React from \"react\";\nimport {ClearOutlined, RedoOutlined, SearchOutlined ,  ExportOutlined, SettingOutlined} from \"@ant-design/icons\";\nimport \"./toolbar.css\"\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\n\nexport const rightToolBarOptions = [\n\n    {\n        key: \"find-and-focus\",\n        name: <OverlayTrigger placement={\"bottom\"}\n                              overlay={\n                                  <Tooltip id={`tooltip-screenshot`}>\n                                      Find and focus node in the canvas\n                                  </Tooltip>\n                              }><SearchOutlined/></OverlayTrigger>\n    },\n    {\n        key: \"space-4\",\n        name: <div className={\"divider\"}></div>\n    },\n    {\n        key: \"screenshot\",\n        name: <OverlayTrigger placement={\"bottom\"}\n                              overlay={\n                                  <Tooltip id={`tooltip-screenshot`}>\n                                      Export canvas\n                                  </Tooltip>\n                              }><ExportOutlined /></OverlayTrigger>\n    },\n    {\n        key: \"space-5\",\n        name: <div className={\"divider\"}></div>\n    },\n    {\n        key: \"display-settings\",\n        name: <OverlayTrigger placement={\"bottom\"}\n                              overlay={\n                                  <Tooltip id={`tooltip-display-settings`}>\n                                      Display Settings\n                                  </Tooltip>\n                              }><SettingOutlined/></OverlayTrigger>\n    }\n];\n","import React from \"react\";\nimport {GraphinContextType} from \"@antv/graphin/lib/GraphinContext\";\nimport {\n    ZoomInOutlined, ZoomOutOutlined, PartitionOutlined,\n    FullscreenExitOutlined, ClearOutlined, RedoOutlined, CameraOutlined,\n    ShareAltOutlined, DeploymentUnitOutlined, AppstoreOutlined\n} from \"@ant-design/icons\";\nimport \"./toolbar.css\"\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\n\nexport const leftToolBarOptions = [\n\n    {\n        key: \"canvas-clear\",\n        name: <OverlayTrigger placement={\"bottom\"}\n                              overlay={\n                                  <Tooltip id={`tooltip-clear`}>\n                                      Clear Canvas\n                                  </Tooltip>\n                              }><ClearOutlined/></OverlayTrigger>\n    }, {\n        key: \"canvas-redraw\",\n        name: <OverlayTrigger placement={\"bottom\"}\n                              overlay={\n                                  <Tooltip id={`tooltip-redraw`}>\n                                      Redraw Canvas\n                                  </Tooltip>\n                              }><RedoOutlined/></OverlayTrigger>\n    }, {\n        key: \"space-2\",\n        name: <div className={\"divider\"}></div>\n    },\n\n    {\n        key: \"zoomOut\",\n        // name: (\n        //   <span>\n        //     zoom out\n        //   </span>\n        // ),\n        name: <OverlayTrigger placement={\"bottom\"}\n                              overlay={\n                                  <Tooltip id={`tooltip-zoomOut`}>\n                                      Zoom out\n                                  </Tooltip>\n                              }><ZoomOutOutlined/>\n        </OverlayTrigger>\n    },\n    {\n        key: \"zoomIn\",\n        name: <OverlayTrigger placement={\"bottom\"}\n                              overlay={\n                                  <Tooltip id={`tooltip-zoomIn`}>\n                                      Zoom In\n                                  </Tooltip>\n                              }><ZoomInOutlined/></OverlayTrigger>\n    }, {\n        key: \"fit-center\",\n        name: <OverlayTrigger placement={\"bottom\"}\n                              overlay={\n                                  <Tooltip id={`tooltip-fit-center`}>\n                                      Fit to view\n                                  </Tooltip>\n                              }><FullscreenExitOutlined/></OverlayTrigger>\n    },\n    {\n        key: \"space-1\",\n        name: <div className={\"divider\"}></div>\n    },\n    {\n        key: \"gForce-layout\",\n        name: <OverlayTrigger placement={\"bottom\"}\n                              overlay={\n                                  <Tooltip id={`tooltip-gForce`}>\n                                      gForce Layout\n                                  </Tooltip>\n                              }><ShareAltOutlined/></OverlayTrigger>\n    },\n    // {\n    //     key: \"radial-layout\",\n    //     name: \"radial\"\n    // },\n    {\n        key: \"circular-layout\",\n        name: <OverlayTrigger placement={\"bottom\"}\n                              overlay={\n                                  <Tooltip id={`tooltip-circular`}>\n                                      Circular Layout\n                                  </Tooltip>\n                              }><DeploymentUnitOutlined/></OverlayTrigger>\n    }, {\n        key: \"grid-layout\",\n        name: <OverlayTrigger placement={\"bottom\"}\n                              overlay={\n                                  <Tooltip id={`tooltip-grid`}>\n                                      Grid Layout\n                                  </Tooltip>\n                              }><AppstoreOutlined/></OverlayTrigger>\n    }, {\n        key: \"dagre-layout\",\n        name: <OverlayTrigger placement={\"bottom\"}\n                              overlay={\n                                  <Tooltip id={`tooltip-dagre`}>\n                                      Dagre Layout\n                                  </Tooltip>\n                              }><PartitionOutlined/></OverlayTrigger>\n    },\n];\n","import React, {useContext} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Card, FloatingLabel, Form} from \"react-bootstrap\";\nimport {ContextMenuValue, GraphinContext, IG6GraphEvent} from \"@antv/graphin\";\n\n\n/*\n\nnodeDisplaySettings = {\n    \"labelType\":\n    \"nodeIcon\": !\n    \"nodeSize\",\n    \"nodeColor\"\n    \"nodeShape\",\n}\n\n */\n\n// @ts-ignore\nfunction NodeDisplaySettings(props: any) {\n\n    const {apis, graph} = useContext(GraphinContext);\n    const updateConfig = (labelType: string) => {\n\n        // update the styles of type\n        const nodes = graph.findAll('node', (node) => {\n            return node.get('model').type === labelType;\n        });\n        // props.stateManager.\n    }\n    return (\n        <div className=\"rightModal  bg-white\" style={props.style}>\n            <Card>\n                <Card.Header>Node display settings</Card.Header>\n                <Card.Body className={\"\"}>\n                    <Card.Text>\n                        {Object.keys(props.nodeDisplaySettings).map((nodeLabel, index) => {\n                            const nodeSetting = props.nodeDisplaySettings[nodeLabel];\n                            if (nodeSetting) {\n                                return (<div className={\"propertyItem border-bottom pb-1 \"}>\n                                    <h6 className={\"mb-1\"}>{nodeLabel} :</h6>\n                                    <FloatingLabel\n                                        controlId=\"nodeDisplayFloatingTextarea\"\n                                        label=\"Node Display config\"\n                                        className=\"mb-3\"\n                                    > <Form.Control\n                                        style={{\"minHeight\": \"130px\"}}\n                                        as=\"textarea\" placeholder=\"add node display config here\"\n                                        value={JSON.stringify(nodeSetting, null, 2)}\n                                    />\n                                    </FloatingLabel>\n                                </div>)\n                            }\n                        })\n                        }\n\n\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n            <Card>\n                <Card.Header>Edge display settings</Card.Header>\n                <Card.Body className={\"\"}>\n                    <Card.Text>\n                        {Object.keys(props.edgeDisplaySettings).map((edgeLabel, index) => {\n                            const edgeSetting = props.edgeDisplaySettings[edgeLabel] || {};\n                            if (edgeSetting) {\n                                return (<div className={\"propertyItem border-bottom pb-1 \"}>\n                                    <h6 className={\"mb-1\"}>{edgeLabel} :</h6>\n                                    <FloatingLabel\n                                        controlId=\"edgeDisplayFloatingTextarea\"\n                                        label=\"edge Display config\"\n                                        className=\"mb-3\"\n                                    > <Form.Control\n                                        style={{\"minHeight\": \"130px\"}}\n                                        as=\"textarea\" placeholder=\"update edge display config here\"\n                                        value={JSON.stringify(edgeSetting, null, 2)}\n                                    />\n                                    </FloatingLabel>\n                                </div>)\n                            }\n                        })\n                        }\n\n\n\n\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n        </div>\n    )\n}\n\nNodeDisplaySettings.propTypes = {\n    style: PropTypes.object,\n    nodeDisplaySettings: PropTypes.object,\n    edgeDisplaySettings: PropTypes.object,\n    stateManager: PropTypes.any,\n}\nexport default NodeDisplaySettings","import Graphin from \"@antv/graphin\";\nimport iconLoader from \"@antv/graphin-icons\";\nimport PropTypes from \"prop-types\";\nimport {INode} from '@antv/g6';\nimport {IUserNode, IUserEdge} from \"@antv/graphin/lib/typings/type\";\n\nexport const IconsPalette = Graphin.registerFontFamily(iconLoader);\n// export const ColorPalette = [\n//     '#5F95FF', // blue\n//     '#61DDAA',\n//     '#65789B',\n//     '#F6BD16',\n//     '#7262FD',\n//     '#78D3F8',\n//     '#9661BC',\n//     '#F6903D',\n//     '#008685',\n//     '#F08BB4'\n// ];\n\n\nfunction lightOrDark(color: any) {\n    let r, g, b\n    // Check the format of the color, HEX or RGB?\n    if (color.match(/^rgb/)) {\n\n        // If HEX --> store the red, green, blue values in separate variables\n        color = color.match(/^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/);\n\n        r = color[1];\n        g = color[2];\n        b = color[3];\n    } else {\n\n        // If RGB --> Convert it to HEX: http://gist.github.com/983661\n        color = +(\"0x\" + color.slice(1).replace(\n                color.length < 5 && /./g, '$&$&'\n            )\n        );\n\n        r = color >> 16;\n        g = color >> 8 & 255;\n        b = color & 255;\n    }\n\n    // HSP (Highly Sensitive Poo) equation from http://alienryderflex.com/hsp.html\n    let hsp = Math.sqrt(\n        0.299 * (r * r) +\n        0.587 * (g * g) +\n        0.114 * (b * b)\n    );\n\n    // Using the HSP value, determine whether the color is light or dark\n    if (hsp > 127.5) {\n\n        return 'light';\n    } else {\n\n        return 'dark';\n    }\n}\n\n// @ts-ignore\nconst pastel_colour = function (str: string) {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    let colour = '#';\n    for (let i = 0; i < 3; i++) {\n        let value = (hash >> (i * 8)) & 0xFF;\n        colour += ('00' + value.toString(16)).substr(-2);\n    }\n\n    // if (lightOrDark(colour) === \"dark\") {\n    //     return colour\n    // } else {\n    //     return pastel_colour(str + \"tested\" )\n    // }\n    return colour\n}\n\nconst generateNodeStyle = (node: INode, styleData: object) => {\n    // @ts-ignore\n    const label = node.label;\n\n\n    // @ts-ignore\n    const color = (styleData && styleData.nodeColor) ? styleData.nodeColor : pastel_colour(label)\n\n    // @ts-ignore\n    const nodeSize = (styleData && styleData.nodeSize) ? styleData.nodeSize : 18\n    // @ts-ignore\n    const nodeIcon = (styleData && styleData.nodeIcon) ? styleData.nodeIcon : null\n    // @ts-ignore\n    const nodeShape = (styleData && styleData.nodeShape) ? styleData.nodeShape : \"graphin-circle\"\n    const iconSize = nodeSize * 0.5\n    // @ts-ignore\n    const nodeLabel = (styleData && styleData.labelPropertyKey && node.properties[styleData.labelPropertyKey]) ?\n        // @ts-ignore\n        node.properties[styleData.labelPropertyKey] : node.id;\n\n    let style = {\n        label: {\n            // @ts-ignore\n            value: nodeLabel\n        },\n        keyshape: {\n            size: nodeSize,\n            stroke: color,\n            fill: color,\n            fillOpacity: 0.2,\n            strokeOpacity: 1\n        },\n\n    };\n\n    if (nodeIcon) {\n        // @ts-ignore\n        style[\"icon\"] = {\n            type: \"font\",\n            value: IconsPalette[nodeIcon],\n            size: iconSize,\n            fill: color,\n            fontFamily: \"graphin\"\n        }\n    }\n\n    return style\n}\n\nconst createNode = (node: object, nodeSetting: object) => {\n    // @ts-ignore\n    node.originalId = node.id;\n    // @ts-ignore\n    node.id = node.id.toString();\n    // @ts-ignore\n    // node.labelType = node.label\n    // @ts-ignore\n    node.style = generateNodeStyle(node, nodeSetting);\n    return Object.assign({}, node) as IUserNode;\n\n}\n\n// @ts-ignore\nexport const applyStylingToNodes = (nodes: Array<any>, nodeDisplaySettings: PropTypes.object) => {\n    return nodes.map((node, i) => {\n        // @ts-ignore\n        return createNode(node, nodeDisplaySettings[node.label])\n    });\n}\n\n\nconst createEdge = (edge: IUserEdge, edgeSetting: object) => {\n    // @ts-ignore\n    if (edge.id) {\n        // @ts-ignore\n        edge.originalId = edge.id;\n        // @ts-ignore\n        edge.id = edge.id.toString();\n    }\n    edge.labelType = edge.label\n\n\n    edge.sourceOriginal = edge.source\n    edge.source = edge.source.toString()\n\n    edge.targetOriginal = edge.target\n    edge.target = edge.target.toString()\n\n    edge.style = {};\n\n    // const color = pastel_colour(labelType)\n// @ts-ignore\n    const color = (edgeSetting && edgeSetting.edgeColor) ? edgeSetting.edgeColor : pastel_colour(edge.label)\n\n    // @ts-ignore\n    const edgeLabel = (edgeSetting && edgeSetting.labelPropertyKey\n    // @ts-ignore\n        && edge.properties && edge.properties[edgeSetting.labelPropertyKey]) ?\n        // @ts-ignore\n        edge.properties[edgeSetting.labelPropertyKey] :  edge.label;\n    //edge.source.toString() + \"-\" + edge.target.toString();\n    edge.style.label = {\n        value: edgeLabel,\n        fill: color, // assign color based on edge type\n        background: {\n            fill: \"#fff\",\n            radius: 8,\n            stroke: \"#fff\"\n        },\n        strokeOpacity: 0.2\n    };\n\n    edge.style.keyshape = {\n        stroke: color // assign color based on edge type\n    };\n    return Object.assign({}, edge) as IUserEdge;\n}\n\n// @ts-ignore\nexport const applyStylingToEdges = (edges: Array<any>, edgeDisplaySettings: PropTypes.object) => {\n    return edges.map(function (edge, i) {\n        return createEdge(edge, edgeDisplaySettings[edge.label] || {})\n    });\n}\n\n\nexport const applyStylesToData = (data: { nodes: Array<any>, edges: Array<any> },\n                                  // @ts-ignore\n                                  nodeDisplaySettings: PropTypes.object, edgeDisplaySettings: PropTypes.object) => {\n    return {\n        nodes: applyStylingToNodes(data.nodes, nodeDisplaySettings),\n        edges: applyStylingToEdges(data.edges, edgeDisplaySettings)\n    }\n}","import React, {useContext} from \"react\";\nimport PropTypes, {node} from \"prop-types\";\nimport {Card, Form, Button, InputGroup, FloatingLabel} from \"react-bootstrap\";\nimport {GraphinContext} from \"@antv/graphin\";\nimport {SearchOutlined} from \"@ant-design/icons\";\nimport {INode, NodeConfig} from '@antv/g6';\nimport ListGroup from 'react-bootstrap/ListGroup';\n\n// @ts-ignore\nfunction FindAndFocus(props: any) {\n\n    const {apis, graph} = useContext(GraphinContext);\n    const [filteredItems, setFilteredItems] = React.useState([]);\n\n\n    const searchString = (searchStr: string) => {\n        console.log(searchStr);\n        // update the styles of type\n        const filteredItems = graph.findAll('node', (node) => {\n            return node.get('model').style.label.value.toString().match(new RegExp(searchStr, \"i\"));\n        });\n        // @ts-ignore\n        setFilteredItems(filteredItems);\n    }\n\n    const focusNode = (nodeId: string) => {\n        apis.focusNodeById(nodeId);\n    }\n    return (\n        <div className=\"rightModal bg-white\" style={props.style}>\n            <Card className={\"h-100\"}>\n                <Card.Header>Find and focus</Card.Header>\n                <Card.Body className={\"\"}>\n                    <Form.Control className={\"mb-3\"} placeholder=\"Search by label\"\n                                  onChange={(e) => searchString(e.target.value)}/>\n                    {\n                        filteredItems.length > 0 ?\n                            <Card>\n                                <ListGroup variant=\"flush\">\n                                    {filteredItems.map((filteredItem: INode, index) => {\n                                        const model = filteredItem.get(\"model\")\n                                        console.log(\"model+++\", model)\n                                        if (model) {\n\n                                            return (<ListGroup.Item key={model.id}\n                                                                    style={{\n                                                                        \"cursor\": \"pointer\",\n                                                                        \"color\": model.style.keyshape.stroke ? model.style.keyshape.stroke : \"auto\"\n                                                                    }}\n                                                                    onClick={() => focusNode(model.id)}>\n\n                                                {\n                                                    model.style.icon ?\n                                                        <span className=\"icon-foo me-1\"\n                                                              style={{fontFamily: model.style.icon.fontFamily,}}>\n                                                    {model.style.icon.value}</span> : <span/>\n                                                }\n                                                {model.style.label.value.toString()}\n                                            </ListGroup.Item>)\n                                        }\n                                    })}\n                                </ListGroup>\n                            </Card>\n                            : <span/>\n                    }\n\n                </Card.Body>\n            </Card>\n        </div>\n    )\n}\n\nFindAndFocus.propTypes = {\n    stateManager: PropTypes.any,\n}\nexport default FindAndFocus","import React, {useContext} from \"react\";\nimport PropTypes, {node} from \"prop-types\";\nimport {Card, Form, Button, InputGroup, FloatingLabel} from \"react-bootstrap\";\nimport {GraphinContext} from \"@antv/graphin\";\nimport {SearchOutlined} from \"@ant-design/icons\";\nimport {INode, NodeConfig} from '@antv/g6';\nimport ListGroup from 'react-bootstrap/ListGroup';\n\n// @ts-ignore\nfunction ExportCanvas(props: any) {\n\n    const {apis, graph} = useContext(GraphinContext);\n\n    // graph.downloadImage()\n\n    return (\n        <div className=\"rightModal bg-white\" style={props.style}>\n            <Card className={\"h-100\"}>\n                <Card.Header>Export canvas</Card.Header>\n                <Card.Body className={\"\"}>\n\n                    <Button className={\"me-3\"} onClick={() => graph.downloadImage(\"canvas.png\", 'image/png' )}>PNG</Button>\n                    <Button className={\"me-3\"} onClick={() => graph.downloadImage(\"canvas.jpeg\", 'image/jpeg', \"#ffffff\" )}>JPEG</Button>\n                    {/*<Button className={\"me-3\"} onClick={() => graph.toDataURL()}>SVG</Button>*/}\n\n\n                </Card.Body>\n            </Card>\n        </div>\n    )\n}\n\nExportCanvas.propTypes = {\n    stateManager: PropTypes.any,\n}\nexport default ExportCanvas","import React from \"react\";\nimport Graphin, {Behaviors, Components} from \"@antv/graphin\";\nimport {Grid} from \"@antv/graphin-components\";\nimport {Toolbar} from '@antv/graphin-components';\nimport SelectMultipleNodes from \"../../canvas/behaviours/selectMultiple\"\nimport FocusSelectedNodes from \"../../canvas/behaviours/focusSelected\"\nimport \"@antv/graphin-icons/dist/index.css\";\nimport {NodeContextMenu} from \"../../canvas/plugins/contextMenu/contextMenu\";\nimport {defaultLayoutSettings, miniMapOptions} from \"../../settings/default\";\nimport {defaultNodeStyle} from \"../../settings/default\";\nimport \"../../canvas/style.css\";\nimport {GraphinContextType} from \"@antv/graphin/lib/GraphinContext\";\nimport ShowSelectedNodes from \"../../canvas/plugins/selectedNodes\"\nimport Footer from \"../../canvas/plugins/footer/footer\";\nimport \"./canvas.css\"\nimport {handleToolBarClick} from \"../../canvas/plugins/toolbar/handler\";\nimport PropTypes from 'prop-types';\nimport StateManager from \"../../state/manager\";\nimport HoveredItemInfo from \"../../canvas/plugins/hoveredItemInfo\";\nimport {rightToolBarOptions} from \"../../canvas/plugins/toolbar/rightToolBar\";\nimport {leftToolBarOptions} from \"../../canvas/plugins/toolbar/leftToolbar\";\nimport NodeDisplaySettings from \"../displaySettings/nodeDisplaySettings\";\nimport \"../normalise.css\";\nimport {applyStylesToData} from \"../../canvas/colorUtils\";\nimport FindAndFocus from \"../find/findAndFocus\";\nimport ExportCanvas from \"../export/exportCanvas\"\n\nconst {\n    DragCanvas, // Drag the canvas\n    ZoomCanvas, //Zoom canvas\n    ClickSelect, // Click to select the node\n    BrushSelect, //Circle selection operation\n    DragNode, // Drag node\n    // ResizeCanvas, // automatically adjust canvas width and height\n    LassoSelect, // Lasso operation\n    DragCombo, // Drag Combo\n    ActivateRelations, // associated highlight\n    Hoverable // Hover operation,\n\n    // DragNodeWithForce\n} = Behaviors;\n\nconst {MiniMap, ContextMenu, SnapLine} = Components;\n// const {ContextMenu} = Components;\nconst options = {\n    line: {\n        stroke: 'lightgreen',\n        lineWidth: 0.5,\n    },\n};\n/*\n\n{\n    statusMessageText : null,\n    data : {\n        nodes: [],\n        edges: [],\n    },\n    selectedNodes: [],\n    hoveredItem: null,\n    displaySettings: {\n        canvas: {\n            background: null,\n            layout: {}\n        },\n        nodeSettings: {\n        },\n        edgeSettings: {\n        }\n    }\n}\n*/\n\n\n// @ts-ignore\nfunction GraphCanvas({data, containerId, width, height, initState, welcomeComponent}) {\n    console.log(data);\n    const [layoutSettings, setLayoutSettings] = React.useState(initState[\"layoutSettings\"]);\n    const [selectedNodes, setSelectedNodes] = React.useState(initState[\"selectedNodes\"]);\n    const [messageText, setMessageText] = React.useState(initState[\"messageText\"]);\n    const [hoveredItem, setHoveredItem] = React.useState(initState[\"hoveredItem\"]);\n\n    const [rightModal, setRightModal] = React.useState(null)\n\n    // const [showDisplaySettings, setShowDisplaySettings] = React.useState(initState[\"showDisplaySettings\"]);\n    // const [showFindAndFocus, setShowFindAndFocus] = React.useState(initState[\"showFindAndFocus\"]);\n    // const [showExportCanvas, setExportCanvas] = React.useState(false);\n\n    const [nodeDisplaySettings, setNodeDisplaySettings] = React.useState(initState[\"nodeDisplaySettings\"]);\n    const [edgeDisplaySettings, setEdgeDisplaySettings] = React.useState(initState[\"edgeDisplaySettings\"]);\n\n\n    const processedData = applyStylesToData(data,\n        initState[\"nodeDisplaySettings\"],\n        initState[\"edgeDisplaySettings\"])\n\n    const stateManager = new StateManager(\n        setLayoutSettings,\n        setSelectedNodes,\n        setMessageText,\n        setHoveredItem,\n        // setShowDisplaySettings,\n        setNodeDisplaySettings,\n        setEdgeDisplaySettings,\n        setRightModal,\n        // setShowFindAndFocus,\n        // setExportCanvas,\n        layoutSettings,\n        selectedNodes,\n        messageText,\n        hoveredItem,\n        nodeDisplaySettings,\n        edgeDisplaySettings,\n        // showDisplaySettings,\n        // showFindAndFocus,\n        // showExportCanvas\n        rightModal\n    )\n\n\n    // @ts-ignore\n    return (\n        <div className=\"grid-plugin-container graph-canvas-container\"\n             style={{\n                 width: width, height: height,\n                 paddingTop: \"30px\"\n             }}>\n            <span>{welcomeComponent || \"\"}</span>\n\n            <Graphin\n                data={processedData}\n                className={\"graph-canvas\"}\n                autoPaint={true}\n                // height={height - 38}\n                layout={{type: layoutSettings.type, ...layoutSettings.options}}\n                containerId={containerId}\n                defaultNodeStyle={defaultNodeStyle}\n            >\n\n                <SnapLine options={options} visible/>\n\n                <Grid/>\n                <MiniMap options={miniMapOptions}/>\n                <ZoomCanvas enableOptimize/>\n                {/* Drag and Drop Canvas */}\n                <DragCanvas/>\n                {/* Zoom Canvas */}\n                <ZoomCanvas/>\n                {/* Drag-and-drop node */}\n                <DragNode/>\n                {/* Click Node */}\n                <DragCombo/>\n                {/* Click Node */}\n                <ClickSelect/>\n                {/* Circle Node */}\n                <BrushSelect/>\n                <ActivateRelations/>\n                {/*<UndoRedo ref={historyRef}/>*/}\n                {/*<FocusSelectedNodes/>*/}\n                {/*<SelectMultipleNodes />*/}\n\n                {/*<ResizeCanvas graphDOM={this.graphDOM as HTMLDivElement} />*/}\n                {/* <TreeCollapse /> */}\n                {/** hovering node**/}\n\n                <ShowSelectedNodes\n                    selectedNodes={selectedNodes}\n                    stateManager={stateManager}\n                    style={{\n                        \"top\": \"10px\",\n                        \"left\": \"15px\",\n                        \"position\": \"absolute\"\n                    }}/>\n                <HoveredItemInfo stateManager={stateManager}/>\n                <ContextMenu style={{\n                    background: \"#fff\",\n                    maxHeight: \"600px\",\n                    width: \"320px\"\n                }} bindType=\"node\">\n                    {(value) => {\n                        return <NodeContextMenu {...value} />;\n                    }}\n                </ContextMenu>\n\n                <LassoSelect/>\n                <Hoverable bindType=\"edge\"/>\n                <Hoverable bindType=\"node\"/>\n\n                {\n                    welcomeComponent\n                        ? welcomeComponent : <span/>\n                }\n                {\n                    rightModal === \"showDisplaySettings\"\n                        ? <NodeDisplaySettings\n                            nodeDisplaySettings={nodeDisplaySettings}\n                            edgeDisplaySettings={edgeDisplaySettings}\n                            stateManager={stateManager}\n                        /> : rightModal === \"showFindAndFocus\"\n                            ? <FindAndFocus stateManager={stateManager}/>\n                            : rightModal === \"showExportCanvas\"\n                                ? <ExportCanvas stateManager={stateManager}/> : <span/>\n                }\n                <Toolbar\n                    style={{\"top\": \"-31px\", \"left\": \"-1px\"}}\n                    options={leftToolBarOptions}\n                    onChange={(graphinContext: GraphinContextType, config: any) =>\n                        handleToolBarClick(graphinContext, config, stateManager)}\n                />\n\n                <Toolbar\n                    style={{\"top\": \"-31px\", \"right\": \"-1px\"}}\n                    options={rightToolBarOptions}\n                    onChange={(graphinContext: GraphinContextType, config: any) =>\n                        handleToolBarClick(graphinContext, config, stateManager)}\n                />\n\n                {/* <DragNodeWithForce /> */}\n                <Footer messageText={messageText} selectedNodes={selectedNodes}/>\n\n            </Graphin>\n        </div>\n    );\n}\n\n\nGraphCanvas.propTypes = {\n    data: PropTypes.any,\n    containerId: PropTypes.string,\n    style: PropTypes.object,\n    initState: PropTypes.object,\n    welcomeComponent: PropTypes.any,\n}\n\nexport default GraphCanvas;","import React, {useContext} from \"react\";\nimport PropTypes, {node} from \"prop-types\";\nimport {Card, Form, Button, InputGroup, FloatingLabel} from \"react-bootstrap\";\nimport {GraphinContext} from \"@antv/graphin\";\n\n\n// @ts-ignore\nfunction WelcomeToCanvas(props: any) {\n\n    const {apis, graph} = useContext(GraphinContext);\n\n    // graph.downloadImage()\n    const doSomething=()=>{\n    }\n\n\n    return (\n        <div className=\"welcomeModal bg-white\" style={props.style}>\n            <Card className={\"h-100\"}>\n                <Card.Header>Hey there! What do you want to analyse ?</Card.Header>\n                <Card.Body className={\"\"}>\n\n           {/*<ul className=\"list-group  list-group-flush\">*/}\n           {/*         <li className={\"list-group-item \"}*/}\n           {/*             style={{\"cursor\": \"pointer\"}}*/}\n           {/*             onClick={() => doSomething()}>*/}\n           {/*             Start new canvas*/}\n           {/*         </li>*/}\n\n           {/*         <li className={\"list-group-item \"}*/}\n           {/*             style={{\"cursor\": \"pointer\"}}*/}\n           {/*             onClick={() => doSomething()}>*/}\n           {/*             canvas 1*/}\n           {/*         </li>*/}\n           {/*         <li className={\"list-group-item \"}*/}\n           {/*             style={{\"cursor\": \"pointer\"}}*/}\n           {/*             onClick={() => doSomething()}>*/}\n           {/*             Learn more - Getting started with Graph Canvas*/}\n           {/*         </li>*/}\n\n\n           {/*     </ul>*/}\n\n                </Card.Body>\n            </Card>\n        </div>\n    )\n}\n\nWelcomeToCanvas.propTypes = {\n    stateManager: PropTypes.any,\n}\nexport default WelcomeToCanvas","import React from \"react\";\nimport {Utils} from \"@antv/graphin\";\nimport {applyStylesToData} from \"../canvas/colorUtils\";\nimport GraphCanvas from \"../components/canvas/canvas\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport authorStoryData from \"../exampleData/author-story/data.json\";\nimport authorStoryInitState from \"../exampleData/author-story/settings.json\";\nimport flightStoryData from \"../exampleData/flight-story/data.json\";\nimport flightStoryInitState from \"../exampleData/flight-story/settings.json\"\nimport blankStoryData from \"../exampleData/blank-story/data.json\";\nimport blankStoryInitState from \"../exampleData/blank-story/settings.json\"\nimport WelcomeToCanvas from \"../components/welcome/welcome\";\n\n\n// import data from \"../exampleData/flight-story/data.json\";\n// import defaultSettings from \"../canvas/defaults\";\n// const authorStoryInitState = defaultSettings\n\n// const data = Utils.mock(1345).random().graphin();\n// data.nodes.map((node)=>{\n//     node.label = \"User\"\n// })\n// data.edges.map((node)=>{\n//     node.label = \"relationship\"\n// })\n\nfunction ExamplesView() {\n\n\n    const [selectedCanvas, setSelectedCanvas] = React.useState(\" -story\")\n    return <div className=\"container-fluid\" style={{\"padding\": \"30px\"}}>\n        <div className=\"row\">\n            <div className=\"col-10\">\n                {selectedCanvas == \"full-ravi-story\" ?\n                    <GraphCanvas data={authorStoryData}\n                                 initState={authorStoryInitState}\n                                 containerId={\"graph-canvas\"}\n                                 width={\"100%\"} height={920}\n                    />\n                    : selectedCanvas == \"full-flight-story\" ?\n                        <GraphCanvas data={flightStoryData}\n                                     initState={flightStoryInitState}\n                                     containerId={\"graph-canvas\"}\n                                     width={\"100%\"} height={920}\n                        />\n\n                        : selectedCanvas == \"blank-story\" ?\n                            <GraphCanvas\n                                data={blankStoryData}\n                                initState={blankStoryInitState}\n                                containerId={\"graph-canvas\"}\n                                width={\"100%\"} height={920}\n                                welcomeComponent={<WelcomeToCanvas/>}\n\n                            />\n\n                            : <React.Fragment/>\n                }\n\n            </div>\n            <div className=\"col-2\">\n                <ul className=\"list-group  list-group-flush\">\n                    <li className={\"list-group-item \" + (selectedCanvas == \"blank-story\" ? 'active' : '')}\n                        style={{\"cursor\": \"pointer\"}}\n                        onClick={() => setSelectedCanvas(\"blank-story\")}>\n                        Blank Canvas\n                    </li>\n                    <li className={\"list-group-item \" + (selectedCanvas == \"full-ravi-story\" ? 'active' : '')}\n                        style={{\"cursor\": \"pointer\"}}\n                        onClick={() => setSelectedCanvas(\"full-ravi-story\")}>\n                        Full Canvas(Story of Ravi)\n                    </li>\n                    <li className={\"list-group-item \" + (selectedCanvas == \"full-flight-story\" ? 'active' : '')}\n                        style={{\"cursor\": \"pointer\"}}\n                        onClick={() => setSelectedCanvas(\"full-flight-story\")}>\n                        Full Canvas(Story of Flights)\n                    </li>\n\n                </ul>\n\n            </div>\n        </div>\n    </div>\n}\n\nexport default ExamplesView;","import React, {useContext} from \"react\";\nimport PropTypes, {node} from \"prop-types\";\nimport {Card, Form, Button, InputGroup, FloatingLabel} from \"react-bootstrap\";\nimport {GraphinContext} from \"@antv/graphin\";\nimport GraphCanvas from \"../components/canvas/canvas\";\nimport authorStoryData from \"../exampleData/author-story/data.json\";\nimport authorStoryInitState from \"../exampleData/author-story/settings.json\";\nimport flightStoryData from \"../exampleData/flight-story/data.json\";\nimport flightStoryInitState from \"../exampleData/flight-story/settings.json\";\nimport blankStoryData from \"../exampleData/blank-story/data.json\";\nimport blankStoryInitState from \"../exampleData/blank-story/settings.json\";\nimport WelcomeToCanvas from \"../components/welcome/welcome\";\nimport helloWorldStoryData from \"../exampleData/hello-world/data.json\";\nimport helloWorldInitState from \"../exampleData/hello-world/settings.json\"\n\n/*\n(c) by Thomas Konings\nRandom Name Generator for Javascript\n*/\n\nfunction capFirst(s: string) {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n}\n\nfunction getRandomInt(min: any, max: any) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\n\nfunction generateName() {\n    const name1 = [\"abandoned\", \"milkyway\", \"mountain\", \"ocean\", \"adventurous\", \"academic\", \"acceptable\", \"acclaimed\", \"accomplished\", \"accurate\", \"aching\", \"acidic\", \"acrobatic\", \"active\", \"actual\", \"adept\", \"admirable\", \"admired\", \"adolescent\", \"adorable\", \"adored\", \"advanced\", \"afraid\", \"affectionate\", \"aged\", \"aggravating\", \"aggressive\", \"agile\", \"agitated\", \"agonizing\", \"agreeable\", \"ajar\", \"alarmed\", \"alarming\", \"alert\", \"alienated\", \"alive\", \"all\", \"altruistic\", \"amazing\", \"ambitious\", \"ample\", \"amused\", \"amusing\", \"anchored\", \"ancient\", \"angelic\", \"angry\", \"anguished\", \"animated\", \"annual\", \"another\", \"antique\", \"anxious\", \"any\", \"apprehensive\", \"appropriate\", \"apt\", \"arctic\", \"arid\", \"aromatic\", \"artistic\", \"ashamed\", \"assured\", \"astonishing\", \"athletic\", \"attached\", \"attentive\", \"attractive\", \"austere\", \"authentic\", \"authorized\", \"automatic\", \"avaricious\", \"average\", \"aware\", \"awesome\", \"awful\", \"awkward\", \"babyish\", \"bad\", \"back\", \"baggy\", \"bare\", \"barren\", \"basic\", \"beautiful\", \"belated\", \"beloved\", \"beneficial\", \"better\", \"best\", \"bewitched\", \"big\", \"big-hearted\", \"biodegradable\", \"bite-sized\", \"bitter\", \"black\", \"black-and-white\", \"bland\", \"blank\", \"blaring\", \"bleak\", \"blind\", \"blissful\", \"blond\", \"blue\", \"blushing\", \"bogus\", \"boiling\", \"bold\", \"bony\", \"boring\", \"bossy\", \"both\", \"bouncy\", \"bountiful\", \"bowed\", \"brave\", \"breakable\", \"brief\", \"bright\", \"brilliant\", \"brisk\", \"broken\", \"bronze\", \"brown\", \"bruised\", \"bubbly\", \"bulky\", \"bumpy\", \"buoyant\", \"burdensome\", \"burly\", \"bustling\", \"busy\", \"buttery\", \"buzzing\", \"calculating\", \"calm\", \"candid\", \"canine\", \"capital\", \"carefree\", \"careful\", \"careless\", \"caring\", \"cautious\", \"cavernous\", \"celebrated\", \"charming\", \"cheap\", \"cheerful\", \"cheery\", \"chief\", \"chilly\", \"chubby\", \"circular\", \"classic\", \"clean\", \"clear\", \"clear-cut\", \"clever\", \"close\", \"closed\", \"cloudy\", \"clueless\", \"clumsy\", \"cluttered\", \"coarse\", \"cold\", \"colorful\", \"colorless\", \"colossal\", \"comfortable\", \"common\", \"compassionate\", \"competent\", \"complete\", \"complex\", \"complicated\", \"composed\", \"concerned\", \"concrete\", \"confused\", \"conscious\", \"considerate\", \"constant\", \"content\", \"conventional\", \"cooked\", \"cool\", \"cooperative\", \"coordinated\", \"corny\", \"corrupt\", \"costly\", \"courageous\", \"courteous\", \"crafty\", \"crazy\", \"creamy\", \"creative\", \"creepy\", \"criminal\", \"crisp\", \"critical\", \"crooked\", \"crowded\", \"cruel\", \"crushing\", \"cuddly\", \"cultivated\", \"cultured\", \"cumbersome\", \"curly\", \"curvy\", \"cute\", \"cylindrical\", \"damaged\", \"damp\", \"dangerous\", \"dapper\", \"daring\", \"darling\", \"dark\", \"dazzling\", \"dead\", \"deadly\", \"deafening\", \"dear\", \"dearest\", \"decent\", \"decimal\", \"decisive\", \"deep\", \"defenseless\", \"defensive\", \"defiant\", \"deficient\", \"definite\", \"definitive\", \"delayed\", \"delectable\", \"delicious\", \"delightful\", \"delirious\", \"demanding\", \"dense\", \"dental\", \"dependable\", \"dependent\", \"descriptive\", \"deserted\", \"detailed\", \"determined\", \"devoted\", \"different\", \"difficult\", \"digital\", \"diligent\", \"dim\", \"dimpled\", \"dimwitted\", \"direct\", \"disastrous\", \"discrete\", \"disfigured\", \"disgusting\", \"disloyal\", \"dismal\", \"distant\", \"downright\", \"dreary\", \"dirty\", \"disguised\", \"dishonest\", \"dismal\", \"distant\", \"distinct\", \"distorted\", \"dizzy\", \"dopey\", \"doting\", \"double\", \"downright\", \"drab\", \"drafty\", \"dramatic\", \"dreary\", \"droopy\", \"dry\", \"dual\", \"dull\", \"dutiful\", \"each\", \"eager\", \"earnest\", \"early\", \"easy\", \"easy-going\", \"ecstatic\", \"edible\", \"educated\", \"elaborate\", \"elastic\", \"elated\", \"elderly\", \"electric\", \"elegant\", \"elementary\", \"elliptical\", \"embarrassed\", \"embellished\", \"eminent\", \"emotional\", \"empty\", \"enchanted\", \"enchanting\", \"energetic\", \"enlightened\", \"enormous\", \"enraged\", \"entire\", \"envious\", \"equal\", \"equatorial\", \"essential\", \"esteemed\", \"ethical\", \"euphoric\", \"even\", \"evergreen\", \"everlasting\", \"every\", \"evil\", \"exalted\", \"excellent\", \"exemplary\", \"exhausted\", \"excitable\", \"excited\", \"exciting\", \"exotic\", \"expensive\", \"experienced\", \"expert\", \"extraneous\", \"extroverted\", \"extra-large\", \"extra-small\", \"fabulous\", \"failing\", \"faint\", \"fair\", \"faithful\", \"fake\", \"false\", \"familiar\", \"famous\", \"fancy\", \"fantastic\", \"far\", \"faraway\", \"far-flung\", \"far-off\", \"fast\", \"fat\", \"fatal\", \"fatherly\", \"favorable\", \"favorite\", \"fearful\", \"fearless\", \"feisty\", \"feline\", \"female\", \"feminine\", \"few\", \"fickle\", \"filthy\", \"fine\", \"finished\", \"firm\", \"first\", \"firsthand\", \"fitting\", \"fixed\", \"flaky\", \"flamboyant\", \"flashy\", \"flat\", \"flawed\", \"flawless\", \"flickering\", \"flimsy\", \"flippant\", \"flowery\", \"fluffy\", \"fluid\", \"flustered\", \"focused\", \"fond\", \"foolhardy\", \"foolish\", \"forceful\", \"forked\", \"formal\", \"forsaken\", \"forthright\", \"fortunate\", \"fragrant\", \"frail\", \"frank\", \"frayed\", \"free\", \"French\", \"fresh\", \"frequent\", \"friendly\", \"frightened\", \"frightening\", \"frigid\", \"frilly\", \"frizzy\", \"frivolous\", \"front\", \"frosty\", \"frozen\", \"frugal\", \"fruitful\", \"full\", \"fumbling\", \"functional\", \"funny\", \"fussy\", \"fuzzy\", \"gargantuan\", \"gaseous\", \"general\", \"generous\", \"gentle\", \"genuine\", \"giant\", \"giddy\", \"gigantic\", \"gifted\", \"giving\", \"glamorous\", \"glaring\", \"glass\", \"gleaming\", \"gleeful\", \"glistening\", \"glittering\", \"gloomy\", \"glorious\", \"glossy\", \"glum\", \"golden\", \"good\", \"good-natured\", \"gorgeous\", \"graceful\", \"gracious\", \"grand\", \"grandiose\", \"granular\", \"grateful\", \"grave\", \"gray\", \"great\", \"greedy\", \"green\", \"gregarious\", \"grim\", \"grimy\", \"gripping\", \"grizzled\", \"gross\", \"grotesque\", \"grouchy\", \"grounded\", \"growing\", \"growling\", \"grown\", \"grubby\", \"gruesome\", \"grumpy\", \"guilty\", \"gullible\", \"gummy\", \"hairy\", \"half\", \"handmade\", \"handsome\", \"handy\", \"happy\", \"happy-go-lucky\", \"hard\", \"hard-to-find\", \"harmful\", \"harmless\", \"harmonious\", \"harsh\", \"hasty\", \"hateful\", \"haunting\", \"healthy\", \"heartfelt\", \"hearty\", \"heavenly\", \"heavy\", \"hefty\", \"helpful\", \"helpless\", \"hidden\", \"hideous\", \"high\", \"high-level\", \"hilarious\", \"hoarse\", \"hollow\", \"homely\", \"honest\", \"honorable\", \"honored\", \"hopeful\", \"horrible\", \"hospitable\", \"hot\", \"huge\", \"humble\", \"humiliating\", \"humming\", \"humongous\", \"hungry\", \"hurtful\", \"husky\", \"icky\", \"icy\", \"ideal\", \"idealistic\", \"identical\", \"idle\", \"idiotic\", \"idolized\", \"ignorant\", \"ill\", \"illegal\", \"ill-fated\", \"ill-informed\", \"illiterate\", \"illustrious\", \"imaginary\", \"imaginative\", \"immaculate\", \"immaterial\", \"immediate\", \"immense\", \"impassioned\", \"impeccable\", \"impartial\", \"imperfect\", \"imperturbable\", \"impish\", \"impolite\", \"important\", \"impossible\", \"impractical\", \"impressionable\", \"impressive\", \"improbable\", \"impure\", \"inborn\", \"incomparable\", \"incompatible\", \"incomplete\", \"inconsequential\", \"incredible\", \"indelible\", \"inexperienced\", \"indolent\", \"infamous\", \"infantile\", \"infatuated\", \"inferior\", \"infinite\", \"informal\", \"innocent\", \"insecure\", \"insidious\", \"insignificant\", \"insistent\", \"instructive\", \"insubstantial\", \"intelligent\", \"intent\", \"intentional\", \"interesting\", \"internal\", \"international\", \"intrepid\", \"ironclad\", \"irresponsible\", \"irritating\", \"itchy\", \"jaded\", \"jagged\", \"jam-packed\", \"jaunty\", \"jealous\", \"jittery\", \"joint\", \"jolly\", \"jovial\", \"joyful\", \"joyous\", \"jubilant\", \"judicious\", \"juicy\", \"jumbo\", \"junior\", \"jumpy\", \"juvenile\", \"kaleidoscopic\", \"keen\", \"key\", \"kind\", \"kindhearted\", \"kindly\", \"klutzy\", \"knobby\", \"knotty\", \"knowledgeable\", \"knowing\", \"known\", \"kooky\", \"kosher\", \"lame\", \"lanky\", \"large\", \"last\", \"lasting\", \"late\", \"lavish\", \"lawful\", \"lazy\", \"leading\", \"lean\", \"leafy\", \"left\", \"legal\", \"legitimate\", \"light\", \"lighthearted\", \"likable\", \"likely\", \"limited\", \"limp\", \"limping\", \"linear\", \"lined\", \"liquid\", \"little\", \"live\", \"lively\", \"livid\", \"loathsome\", \"lone\", \"lonely\", \"long\", \"long-term\", \"loose\", \"lopsided\", \"lost\", \"loud\", \"lovable\", \"lovely\", \"loving\", \"low\", \"loyal\", \"lucky\", \"lumbering\", \"luminous\", \"lumpy\", \"lustrous\", \"luxurious\", \"mad\", \"made-up\", \"magnificent\", \"majestic\", \"major\", \"male\", \"mammoth\", \"married\", \"marvelous\", \"masculine\", \"massive\", \"mature\", \"meager\", \"mealy\", \"mean\", \"measly\", \"meaty\", \"medical\", \"mediocre\", \"medium\", \"meek\", \"mellow\", \"melodic\", \"memorable\", \"menacing\", \"merry\", \"messy\", \"metallic\", \"mild\", \"milky\", \"mindless\", \"miniature\", \"minor\", \"minty\", \"miserable\", \"miserly\", \"misguided\", \"misty\", \"mixed\", \"modern\", \"modest\", \"moist\", \"monstrous\", \"monthly\", \"monumental\", \"moral\", \"mortified\", \"motherly\", \"motionless\", \"mountainous\", \"muddy\", \"muffled\", \"multicolored\", \"mundane\", \"murky\", \"mushy\", \"musty\", \"muted\", \"mysterious\", \"naive\", \"narrow\", \"nasty\", \"natural\", \"naughty\", \"nautical\", \"near\", \"neat\", \"necessary\", \"needy\", \"negative\", \"neglected\", \"negligible\", \"neighboring\", \"nervous\", \"new\", \"next\", \"nice\", \"nifty\", \"nimble\", \"nippy\", \"nocturnal\", \"noisy\", \"nonstop\", \"normal\", \"notable\", \"noted\", \"noteworthy\", \"novel\", \"noxious\", \"numb\", \"nutritious\", \"nutty\", \"obedient\", \"obese\", \"oblong\", \"oily\", \"oblong\", \"obvious\", \"occasional\", \"odd\", \"oddball\", \"offbeat\", \"offensive\", \"official\", \"old\", \"old-fashioned\", \"only\", \"open\", \"optimal\", \"optimistic\", \"opulent\", \"orange\", \"orderly\", \"organic\", \"ornate\", \"ornery\", \"ordinary\", \"original\", \"other\", \"our\", \"outlying\", \"outgoing\", \"outlandish\", \"outrageous\", \"outstanding\", \"oval\", \"overcooked\", \"overdue\", \"overjoyed\", \"overlooked\", \"palatable\", \"pale\", \"paltry\", \"parallel\", \"parched\", \"partial\", \"passionate\", \"past\", \"pastel\", \"peaceful\", \"peppery\", \"perfect\", \"perfumed\", \"periodic\", \"perky\", \"personal\", \"pertinent\", \"pesky\", \"pessimistic\", \"petty\", \"phony\", \"physical\", \"piercing\", \"pink\", \"pitiful\", \"plain\", \"plaintive\", \"plastic\", \"playful\", \"pleasant\", \"pleased\", \"pleasing\", \"plump\", \"plush\", \"polished\", \"polite\", \"political\", \"pointed\", \"pointless\", \"poised\", \"poor\", \"popular\", \"portly\", \"posh\", \"positive\", \"possible\", \"potable\", \"powerful\", \"powerless\", \"practical\", \"precious\", \"present\", \"prestigious\", \"pretty\", \"precious\", \"previous\", \"pricey\", \"prickly\", \"primary\", \"prime\", \"pristine\", \"private\", \"prize\", \"probable\", \"productive\", \"profitable\", \"profuse\", \"proper\", \"proud\", \"prudent\", \"punctual\", \"pungent\", \"puny\", \"pure\", \"purple\", \"pushy\", \"putrid\", \"puzzled\", \"puzzling\", \"quaint\", \"qualified\", \"quarrelsome\", \"quarterly\", \"queasy\", \"querulous\", \"questionable\", \"quick\", \"quick-witted\", \"quiet\", \"quintessential\", \"quirky\", \"quixotic\", \"quizzical\", \"radiant\", \"ragged\", \"rapid\", \"rare\", \"rash\", \"raw\", \"recent\", \"reckless\", \"rectangular\", \"ready\", \"real\", \"realistic\", \"reasonable\", \"red\", \"reflecting\", \"regal\", \"regular\", \"reliable\", \"relieved\", \"remarkable\", \"remorseful\", \"remote\", \"repentant\", \"required\", \"respectful\", \"responsible\", \"repulsive\", \"revolving\", \"rewarding\", \"rich\", \"rigid\", \"right\", \"ringed\", \"ripe\", \"roasted\", \"robust\", \"rosy\", \"rotating\", \"rotten\", \"rough\", \"round\", \"rowdy\", \"royal\", \"rubbery\", \"rundown\", \"ruddy\", \"rude\", \"runny\", \"rural\", \"rusty\", \"sad\", \"safe\", \"salty\", \"same\", \"sandy\", \"sane\", \"sarcastic\", \"sardonic\", \"satisfied\", \"scaly\", \"scarce\", \"scared\", \"scary\", \"scented\", \"scholarly\", \"scientific\", \"scornful\", \"scratchy\", \"scrawny\", \"second\", \"secondary\", \"second-hand\", \"secret\", \"self-assured\", \"self-reliant\", \"selfish\", \"sentimental\", \"separate\", \"serene\", \"serious\", \"serpentine\", \"several\", \"severe\", \"shabby\", \"shadowy\", \"shady\", \"shallow\", \"shameful\", \"shameless\", \"sharp\", \"shimmering\", \"shiny\", \"shocked\", \"shocking\", \"shoddy\", \"short\", \"short-term\", \"showy\", \"shrill\", \"shy\", \"sick\", \"silent\", \"silky\", \"silly\", \"silver\", \"similar\", \"simple\", \"simplistic\", \"sinful\", \"single\", \"sizzling\", \"skeletal\", \"skinny\", \"sleepy\", \"slight\", \"slim\", \"slimy\", \"slippery\", \"slow\", \"slushy\", \"small\", \"smart\", \"smoggy\", \"smooth\", \"smug\", \"snappy\", \"snarling\", \"sneaky\", \"sniveling\", \"snoopy\", \"sociable\", \"soft\", \"soggy\", \"solid\", \"somber\", \"some\", \"spherical\", \"sophisticated\", \"sore\", \"sorrowful\", \"soulful\", \"soupy\", \"sour\", \"Spanish\", \"sparkling\", \"sparse\", \"specific\", \"spectacular\", \"speedy\", \"spicy\", \"spiffy\", \"spirited\", \"spiteful\", \"splendid\", \"spotless\", \"spotted\", \"spry\", \"square\", \"squeaky\", \"squiggly\", \"stable\", \"staid\", \"stained\", \"stale\", \"standard\", \"starchy\", \"stark\", \"starry\", \"steep\", \"sticky\", \"stiff\", \"stimulating\", \"stingy\", \"stormy\", \"straight\", \"strange\", \"steel\", \"strict\", \"strident\", \"striking\", \"striped\", \"strong\", \"studious\", \"stunning\", \"stupendous\", \"stupid\", \"sturdy\", \"stylish\", \"subdued\", \"submissive\", \"substantial\", \"subtle\", \"suburban\", \"sudden\", \"sugary\", \"sunny\", \"super\", \"superb\", \"superficial\", \"superior\", \"supportive\", \"sure-footed\", \"surprised\", \"suspicious\", \"svelte\", \"sweaty\", \"sweet\", \"sweltering\", \"swift\", \"sympathetic\", \"tall\", \"talkative\", \"tame\", \"tan\", \"tangible\", \"tart\", \"tasty\", \"tattered\", \"taut\", \"tedious\", \"teeming\", \"tempting\", \"tender\", \"tense\", \"tepid\", \"terrible\", \"terrific\", \"testy\", \"thankful\", \"that\", \"these\", \"thick\", \"thin\", \"third\", \"thirsty\", \"this\", \"thorough\", \"thorny\", \"those\", \"thoughtful\", \"threadbare\", \"thrifty\", \"thunderous\", \"tidy\", \"tight\", \"timely\", \"tinted\", \"tiny\", \"tired\", \"torn\", \"total\", \"tough\", \"traumatic\", \"treasured\", \"tremendous\", \"tragic\", \"trained\", \"tremendous\", \"triangular\", \"tricky\", \"trifling\", \"trim\", \"trivial\", \"troubled\", \"true\", \"trusting\", \"trustworthy\", \"trusty\", \"truthful\", \"tubby\", \"turbulent\", \"twin\", \"ugly\", \"ultimate\", \"unacceptable\", \"unaware\", \"uncomfortable\", \"uncommon\", \"unconscious\", \"understated\", \"unequaled\", \"uneven\", \"unfinished\", \"unfit\", \"unfolded\", \"unfortunate\", \"unhappy\", \"unhealthy\", \"uniform\", \"unimportant\", \"unique\", \"united\", \"unkempt\", \"unknown\", \"unlawful\", \"unlined\", \"unlucky\", \"unnatural\", \"unpleasant\", \"unrealistic\", \"unripe\", \"unruly\", \"unselfish\", \"unsightly\", \"unsteady\", \"unsung\", \"untidy\", \"untimely\", \"untried\", \"untrue\", \"unused\", \"unusual\", \"unwelcome\", \"unwieldy\", \"unwilling\", \"unwitting\", \"unwritten\", \"upbeat\", \"upright\", \"upset\", \"urban\", \"usable\", \"used\", \"useful\", \"useless\", \"utilized\", \"utter\", \"vacant\", \"vague\", \"vain\", \"valid\", \"valuable\", \"vapid\", \"variable\", \"vast\", \"velvety\", \"venerated\", \"vengeful\", \"verifiable\", \"vibrant\", \"vicious\", \"victorious\", \"vigilant\", \"vigorous\", \"villainous\", \"violet\", \"violent\", \"virtual\", \"virtuous\", \"visible\", \"vital\", \"vivacious\", \"vivid\", \"voluminous\", \"wan\", \"warlike\", \"warm\", \"warmhearted\", \"warped\", \"wary\", \"wasteful\", \"watchful\", \"waterlogged\", \"watery\", \"wavy\", \"wealthy\", \"weak\", \"weary\", \"webbed\", \"wee\", \"weekly\", \"weepy\", \"weighty\", \"weird\", \"welcome\", \"well-documented\", \"well-groomed\", \"well-informed\", \"well-lit\", \"well-made\", \"well-off\", \"well-to-do\", \"well-worn\", \"wet\", \"which\", \"whimsical\", \"whirlwind\", \"whispered\", \"white\", \"whole\", \"whopping\", \"wicked\", \"wide\", \"wide-eyed\", \"wiggly\", \"wild\", \"willing\", \"wilted\", \"winding\", \"windy\", \"winged\", \"wiry\", \"wise\", \"witty\", \"wobbly\", \"woeful\", \"wonderful\", \"wooden\", \"woozy\", \"wordy\", \"worldly\", \"worn\", \"worried\", \"worrisome\", \"worse\", \"worst\", \"worthless\", \"worthwhile\", \"worthy\", \"wrathful\", \"wretched\", \"writhing\", \"wrong\", \"wry\", \"yawning\", \"yearly\", \"yellow\", \"yellowish\", \"young\", \"youthful\", \"yummy\", \"zany\", \"zealous\", \"zesty\", \"zigzag\", \"rocky\"];\n\n    const name2 = [\"analyst\", \"data\", \"art\", \"world\", \"information\", \"map\", \"family\", \"government\", \"health\", \"system\", \"computer\", \"meat\", \"year\", \"thanks\", \"music\", \"person\", \"reading\", \"method\", \"data\", \"food\", \"understanding\", \"theory\", \"law\", \"bird\", \"literature\", \"problem\", \"software\", \"control\", \"knowledge\", \"power\", \"ability\", \"economics\", \"love\", \"internet\", \"television\", \"science\", \"library\", \"nature\", \"fact\", \"product\", \"idea\", \"temperature\", \"investment\", \"area\", \"society\", \"activity\", \"story\", \"industry\", \"media\", \"thing\", \"oven\", \"community\", \"definition\", \"safety\", \"quality\", \"development\", \"language\", \"management\", \"player\", \"variety\", \"video\", \"week\", \"security\", \"country\", \"exam\", \"movie\", \"organization\", \"equipment\", \"physics\", \"analysis\", \"policy\", \"series\", \"thought\", \"basis\", \"boyfriend\", \"direction\", \"strategy\", \"technology\", \"army\", \"camera\", \"freedom\", \"paper\", \"environment\", \"child\", \"instance\", \"month\", \"truth\", \"marketing\", \"university\", \"writing\", \"article\", \"department\", \"difference\", \"goal\", \"news\", \"audience\", \"fishing\", \"growth\", \"income\", \"marriage\", \"user\", \"combination\", \"failure\", \"meaning\", \"medicine\", \"philosophy\", \"teacher\", \"communication\", \"night\", \"chemistry\", \"disease\", \"disk\", \"energy\", \"nation\", \"road\", \"role\", \"soup\", \"advertising\", \"location\", \"success\", \"addition\", \"apartment\", \"education\", \"math\", \"moment\", \"painting\", \"politics\", \"attention\", \"decision\", \"event\", \"property\", \"shopping\", \"student\", \"wood\", \"competition\", \"distribution\", \"entertainment\", \"office\", \"population\", \"president\", \"unit\", \"category\", \"cigarette\", \"context\", \"introduction\", \"opportunity\", \"performance\", \"driver\", \"flight\", \"length\", \"magazine\", \"newspaper\", \"relationship\", \"teaching\", \"cell\", \"dealer\", \"debate\", \"finding\", \"lake\", \"member\", \"message\", \"phone\", \"scene\", \"appearance\", \"association\", \"concept\", \"customer\", \"death\", \"discussion\", \"housing\", \"inflation\", \"insurance\", \"mood\", \"woman\", \"advice\", \"blood\", \"effort\", \"expression\", \"importance\", \"opinion\", \"payment\", \"reality\", \"responsibility\", \"situation\", \"skill\", \"statement\", \"wealth\", \"application\", \"city\", \"county\", \"depth\", \"estate\", \"foundation\", \"grandmother\", \"heart\", \"perspective\", \"photo\", \"recipe\", \"studio\", \"topic\", \"collection\", \"depression\", \"imagination\", \"passion\", \"percentage\", \"resource\", \"setting\", \"ad\", \"agency\", \"college\", \"connection\", \"criticism\", \"debt\", \"description\", \"memory\", \"patience\", \"secretary\", \"solution\", \"administration\", \"aspect\", \"attitude\", \"director\", \"personality\", \"psychology\", \"recommendation\", \"response\", \"selection\", \"storage\", \"version\", \"alcohol\", \"argument\", \"complaint\", \"contract\", \"emphasis\", \"highway\", \"loss\", \"membership\", \"possession\", \"preparation\", \"steak\", \"union\", \"agreement\", \"cancer\", \"currency\", \"employment\", \"engineering\", \"entry\", \"interaction\", \"limit\", \"mixture\", \"preference\", \"region\", \"republic\", \"seat\", \"tradition\", \"virus\", \"actor\", \"classroom\", \"delivery\", \"device\", \"difficulty\", \"drama\", \"election\", \"engine\", \"football\", \"guidance\", \"hotel\", \"match\", \"owner\", \"priority\", \"protection\", \"suggestion\", \"tension\", \"variation\", \"anxiety\", \"atmosphere\", \"awareness\", \"bread\", \"climate\", \"comparison\", \"confusion\", \"construction\", \"elevator\", \"emotion\", \"employee\", \"employer\", \"guest\", \"height\", \"leadership\", \"mall\", \"manager\", \"operation\", \"recording\", \"respect\", \"sample\", \"transportation\", \"boring\", \"charity\", \"cousin\", \"disaster\", \"editor\", \"efficiency\", \"excitement\", \"extent\", \"feedback\", \"guitar\", \"homework\", \"leader\", \"mom\", \"outcome\", \"permission\", \"presentation\", \"promotion\", \"reflection\", \"refrigerator\", \"resolution\", \"revenue\", \"session\", \"singer\", \"tennis\", \"basket\", \"bonus\", \"cabinet\", \"childhood\", \"church\", \"clothes\", \"coffee\", \"dinner\", \"drawing\", \"hair\", \"hearing\", \"initiative\", \"judgment\", \"lab\", \"measurement\", \"mode\", \"mud\", \"orange\", \"poetry\", \"police\", \"possibility\", \"procedure\", \"queen\", \"ratio\", \"relation\", \"restaurant\", \"satisfaction\", \"sector\", \"signature\", \"significance\", \"song\", \"tooth\", \"town\", \"vehicle\", \"volume\", \"wife\", \"accident\", \"airport\", \"appointment\", \"arrival\", \"assumption\", \"baseball\", \"chapter\", \"committee\", \"conversation\", \"database\", \"enthusiasm\", \"error\", \"explanation\", \"farmer\", \"gate\", \"girl\", \"hall\", \"historian\", \"hospital\", \"injury\", \"instruction\", \"maintenance\", \"manufacturer\", \"meal\", \"perception\", \"pie\", \"poem\", \"presence\", \"proposal\", \"reception\", \"replacement\", \"revolution\", \"river\", \"son\", \"speech\", \"tea\", \"village\", \"warning\", \"winner\", \"worker\", \"writer\", \"assistance\", \"breath\", \"buyer\", \"chest\", \"chocolate\", \"conclusion\", \"contribution\", \"cookie\", \"courage\", \"desk\", \"drawer\", \"establishment\", \"examination\", \"garbage\", \"grocery\", \"honey\", \"impression\", \"improvement\", \"independence\", \"insect\", \"inspection\", \"inspector\", \"king\", \"ladder\", \"menu\", \"penalty\", \"piano\", \"potato\", \"profession\", \"professor\", \"quantity\", \"reaction\", \"requirement\", \"salad\", \"sister\", \"supermarket\", \"tongue\", \"weakness\", \"wedding\", \"affair\", \"ambition\", \"analyst\", \"apple\", \"assignment\", \"assistant\", \"bathroom\", \"bedroom\", \"beer\", \"birthday\", \"celebration\", \"championship\", \"cheek\", \"client\", \"consequence\", \"departure\", \"diamond\", \"dirt\", \"ear\", \"fortune\", \"friendship\", \"funeral\", \"gene\", \"girlfriend\", \"hat\", \"indication\", \"intention\", \"lady\", \"midnight\", \"negotiation\", \"obligation\", \"passenger\", \"pizza\", \"platform\", \"poet\", \"pollution\", \"recognition\", \"reputation\", \"shirt\", \"speaker\", \"stranger\", \"surgery\", \"sympathy\", \"tale\", \"throat\", \"trainer\", \"uncle\", \"youth\", \"time\", \"work\", \"film\", \"water\", \"money\", \"example\", \"while\", \"business\", \"study\", \"game\", \"life\", \"form\", \"air\", \"day\", \"place\", \"number\", \"part\", \"field\", \"fish\", \"back\", \"process\", \"heat\", \"hand\", \"experience\", \"job\", \"book\", \"end\", \"point\", \"type\", \"home\", \"economy\", \"value\", \"body\", \"market\", \"guide\", \"interest\", \"state\", \"radio\", \"course\", \"company\", \"price\", \"size\", \"card\", \"list\", \"mind\", \"trade\", \"line\", \"care\", \"group\", \"risk\", \"word\", \"fat\", \"force\", \"key\", \"light\", \"training\", \"name\", \"school\", \"top\", \"amount\", \"level\", \"order\", \"practice\", \"research\", \"sense\", \"service\", \"piece\", \"web\", \"boss\", \"sport\", \"fun\", \"house\", \"page\", \"term\", \"test\", \"answer\", \"sound\", \"focus\", \"matter\", \"kind\", \"soil\", \"board\", \"oil\", \"picture\", \"access\", \"garden\", \"range\", \"rate\", \"reason\", \"future\", \"site\", \"demand\", \"exercise\", \"image\", \"case\", \"cause\", \"coast\", \"action\", \"age\", \"bad\", \"boat\", \"record\", \"result\", \"section\", \"building\", \"mouse\", \"cash\", \"class\", \"period\", \"plan\", \"store\", \"tax\", \"side\", \"subject\", \"space\", \"rule\", \"stock\", \"weather\", \"chance\", \"figure\", \"man\", \"model\", \"source\", \"beginning\", \"earth\", \"program\", \"chicken\", \"design\", \"feature\", \"head\", \"material\", \"purpose\", \"question\", \"rock\", \"salt\", \"act\", \"birth\", \"car\", \"dog\", \"object\", \"scale\", \"sun\", \"note\", \"profit\", \"rent\", \"speed\", \"style\", \"war\", \"bank\", \"craft\", \"half\", \"inside\", \"outside\", \"standard\", \"bus\", \"exchange\", \"eye\", \"fire\", \"position\", \"pressure\", \"stress\", \"advantage\", \"benefit\", \"box\", \"frame\", \"issue\", \"step\", \"cycle\", \"face\", \"item\", \"metal\", \"paint\", \"review\", \"room\", \"screen\", \"structure\", \"view\", \"account\", \"ball\", \"discipline\", \"medium\", \"share\", \"balance\", \"bit\", \"black\", \"bottom\", \"choice\", \"gift\", \"impact\", \"machine\", \"shape\", \"tool\", \"wind\", \"address\", \"average\", \"career\", \"culture\", \"morning\", \"pot\", \"sign\", \"table\", \"task\", \"condition\", \"contact\", \"credit\", \"egg\", \"hope\", \"ice\", \"network\", \"north\", \"square\", \"attempt\", \"date\", \"effect\", \"link\", \"post\", \"star\", \"voice\", \"capital\", \"challenge\", \"friend\", \"self\", \"shot\", \"brush\", \"couple\", \"exit\", \"front\", \"function\", \"lack\", \"living\", \"plant\", \"plastic\", \"spot\", \"summer\", \"taste\", \"theme\", \"track\", \"wing\", \"brain\", \"button\", \"click\", \"desire\", \"foot\", \"gas\", \"influence\", \"notice\", \"rain\", \"wall\", \"base\", \"damage\", \"distance\", \"feeling\", \"pair\", \"savings\", \"staff\", \"sugar\", \"target\", \"text\", \"animal\", \"author\", \"budget\", \"discount\", \"file\", \"ground\", \"lesson\", \"minute\", \"officer\", \"phase\", \"reference\", \"register\", \"sky\", \"stage\", \"stick\", \"title\", \"trouble\", \"bowl\", \"bridge\", \"campaign\", \"character\", \"club\", \"edge\", \"evidence\", \"fan\", \"letter\", \"lock\", \"maximum\", \"novel\", \"option\", \"pack\", \"park\", \"quarter\", \"skin\", \"sort\", \"weight\", \"baby\", \"background\", \"carry\", \"dish\", \"factor\", \"fruit\", \"glass\", \"joint\", \"master\", \"muscle\", \"red\", \"strength\", \"traffic\", \"trip\", \"vegetable\", \"appeal\", \"chart\", \"gear\", \"ideal\", \"kitchen\", \"land\", \"log\", \"mother\", \"net\", \"party\", \"principle\", \"relative\", \"sale\", \"season\", \"signal\", \"spirit\", \"street\", \"tree\", \"wave\", \"belt\", \"bench\", \"commission\", \"copy\", \"drop\", \"minimum\", \"path\", \"progress\", \"project\", \"sea\", \"south\", \"status\", \"stuff\", \"ticket\", \"tour\", \"angle\", \"blue\", \"breakfast\", \"confidence\", \"daughter\", \"degree\", \"doctor\", \"dot\", \"dream\", \"duty\", \"essay\", \"father\", \"fee\", \"finance\", \"hour\", \"juice\", \"luck\", \"milk\", \"mouth\", \"peace\", \"pipe\", \"stable\", \"storm\", \"substance\", \"team\", \"trick\", \"afternoon\", \"bat\", \"beach\", \"blank\", \"catch\", \"chain\", \"consideration\", \"cream\", \"crew\", \"detail\", \"gold\", \"interview\", \"kid\", \"mark\", \"mission\", \"pain\", \"pleasure\", \"score\", \"screw\", \"sex\", \"shop\", \"shower\", \"suit\", \"tone\", \"window\", \"agent\", \"band\", \"bath\", \"block\", \"bone\", \"calendar\", \"candidate\", \"cap\", \"coat\", \"contest\", \"corner\", \"court\", \"cup\", \"district\", \"door\", \"east\", \"finger\", \"garage\", \"guarantee\", \"hole\", \"hook\", \"implement\", \"layer\", \"lecture\", \"lie\", \"manner\", \"meeting\", \"nose\", \"parking\", \"partner\", \"profile\", \"rice\", \"routine\", \"schedule\", \"swimming\", \"telephone\", \"tip\", \"winter\", \"airline\", \"bag\", \"battle\", \"bed\", \"bill\", \"bother\", \"cake\", \"code\", \"curve\", \"designer\", \"dimension\", \"dress\", \"ease\", \"emergency\", \"evening\", \"extension\", \"farm\", \"fight\", \"gap\", \"grade\", \"holiday\", \"horror\", \"horse\", \"host\", \"husband\", \"loan\", \"mistake\", \"mountain\", \"nail\", \"noise\", \"occasion\", \"package\", \"patient\", \"pause\", \"phrase\", \"proof\", \"race\", \"relief\", \"sand\", \"sentence\", \"shoulder\", \"smoke\", \"stomach\", \"string\", \"tourist\", \"towel\", \"vacation\", \"west\", \"wheel\", \"wine\", \"arm\", \"aside\", \"associate\", \"bet\", \"blow\", \"border\", \"branch\", \"breast\", \"brother\", \"buddy\", \"bunch\", \"chip\", \"coach\", \"cross\", \"document\", \"draft\", \"dust\", \"expert\", \"floor\", \"god\", \"golf\", \"habit\", \"iron\", \"judge\", \"knife\", \"landscape\", \"league\", \"mail\", \"mess\", \"native\", \"opening\", \"parent\", \"pattern\", \"pin\", \"pool\", \"pound\", \"request\", \"salary\", \"shame\", \"shelter\", \"shoe\", \"silver\", \"tackle\", \"tank\", \"trust\", \"assist\", \"bake\", \"bar\", \"bell\", \"bike\", \"blame\", \"boy\", \"brick\", \"chair\", \"closet\", \"clue\", \"collar\", \"comment\", \"conference\", \"devil\", \"diet\", \"fear\", \"fuel\", \"glove\", \"jacket\", \"lunch\", \"monitor\", \"mortgage\", \"nurse\", \"pace\", \"panic\", \"peak\", \"plane\", \"reward\", \"row\", \"sandwich\", \"shock\", \"spite\", \"spray\", \"surprise\", \"till\", \"transition\", \"weekend\", \"welcome\", \"yard\", \"alarm\", \"bend\", \"bicycle\", \"bite\", \"blind\", \"bottle\", \"cable\", \"candle\", \"clerk\", \"cloud\", \"concert\", \"counter\", \"flower\", \"grandfather\", \"harm\", \"knee\", \"lawyer\", \"leather\", \"load\", \"mirror\", \"neck\", \"pension\", \"plate\", \"purple\", \"ruin\", \"ship\", \"skirt\", \"slice\", \"snow\", \"specialist\", \"stroke\", \"switch\", \"trash\", \"tune\", \"zone\", \"anger\", \"award\", \"bid\", \"bitter\", \"boot\", \"bug\", \"camp\", \"candy\", \"carpet\", \"cat\", \"champion\", \"channel\", \"clock\", \"comfort\", \"cow\", \"crack\", \"engineer\", \"entrance\", \"fault\", \"grass\", \"guy\", \"hell\", \"highlight\", \"incident\", \"island\", \"joke\", \"jury\", \"leg\", \"lip\", \"mate\", \"motor\", \"nerve\", \"passage\", \"pen\", \"pride\", \"priest\", \"prize\", \"promise\", \"resident\", \"resort\", \"ring\", \"roof\", \"rope\", \"sail\", \"scheme\", \"script\", \"sock\", \"station\", \"toe\", \"tower\", \"truck\", \"witness\", \"can\", \"will\", \"other\", \"use\", \"make\", \"good\", \"look\", \"help\", \"go\", \"great\", \"being\", \"still\", \"public\", \"read\", \"keep\", \"start\", \"give\", \"human\", \"local\", \"general\", \"specific\", \"long\", \"play\", \"feel\", \"high\", \"put\", \"common\", \"set\", \"change\", \"simple\", \"past\", \"big\", \"possible\", \"particular\", \"major\", \"personal\", \"current\", \"national\", \"cut\", \"natural\", \"physical\", \"show\", \"try\", \"check\", \"second\", \"call\", \"move\", \"pay\", \"let\", \"increase\", \"single\", \"individual\", \"turn\", \"ask\", \"buy\", \"guard\", \"hold\", \"main\", \"offer\", \"potential\", \"professional\", \"international\", \"travel\", \"cook\", \"alternative\", \"special\", \"working\", \"whole\", \"dance\", \"excuse\", \"cold\", \"commercial\", \"low\", \"purchase\", \"deal\", \"primary\", \"worth\", \"fall\", \"necessary\", \"positive\", \"produce\", \"search\", \"present\", \"spend\", \"talk\", \"creative\", \"tell\", \"cost\", \"drive\", \"green\", \"support\", \"glad\", \"remove\", \"return\", \"run\", \"complex\", \"due\", \"effective\", \"middle\", \"regular\", \"reserve\", \"independent\", \"leave\", \"original\", \"reach\", \"rest\", \"serve\", \"watch\", \"beautiful\", \"charge\", \"active\", \"break\", \"negative\", \"safe\", \"stay\", \"visit\", \"visual\", \"affect\", \"cover\", \"report\", \"rise\", \"walk\", \"white\", \"junior\", \"pick\", \"unique\", \"classic\", \"final\", \"lift\", \"mix\", \"private\", \"stop\", \"teach\", \"western\", \"concern\", \"familiar\", \"fly\", \"official\", \"broad\", \"comfortable\", \"gain\", \"rich\", \"save\", \"stand\", \"young\", \"heavy\", \"lead\", \"listen\", \"valuable\", \"worry\", \"handle\", \"leading\", \"meet\", \"release\", \"sell\", \"finish\", \"normal\", \"press\", \"ride\", \"secret\", \"spread\", \"spring\", \"tough\", \"wait\", \"brown\", \"deep\", \"display\", \"flow\", \"hit\", \"objective\", \"shoot\", \"touch\", \"cancel\", \"chemical\", \"cry\", \"dump\", \"extreme\", \"push\", \"conflict\", \"eat\", \"fill\", \"formal\", \"jump\", \"kick\", \"opposite\", \"pass\", \"pitch\", \"remote\", \"total\", \"treat\", \"vast\", \"abuse\", \"beat\", \"burn\", \"deposit\", \"print\", \"raise\", \"sleep\", \"somewhere\", \"advance\", \"consist\", \"dark\", \"double\", \"draw\", \"equal\", \"fix\", \"hire\", \"internal\", \"join\", \"kill\", \"sensitive\", \"tap\", \"win\", \"attack\", \"claim\", \"constant\", \"drag\", \"drink\", \"guess\", \"minor\", \"pull\", \"raw\", \"soft\", \"solid\", \"wear\", \"weird\", \"wonder\", \"annual\", \"count\", \"dead\", \"doubt\", \"feed\", \"forever\", \"impress\", \"repeat\", \"round\", \"sing\", \"slide\", \"strip\", \"wish\", \"combine\", \"command\", \"dig\", \"divide\", \"equivalent\", \"hang\", \"hunt\", \"initial\", \"march\", \"mention\", \"spiritual\", \"survey\", \"tie\", \"adult\", \"brief\", \"crazy\", \"escape\", \"gather\", \"hate\", \"prior\", \"repair\", \"rough\", \"sad\", \"scratch\", \"sick\", \"strike\", \"employ\", \"external\", \"hurt\", \"illegal\", \"laugh\", \"lay\", \"mobile\", \"nasty\", \"ordinary\", \"respond\", \"royal\", \"senior\", \"split\", \"strain\", \"struggle\", \"swim\", \"train\", \"upper\", \"wash\", \"yellow\", \"convert\", \"crash\", \"dependent\", \"fold\", \"funny\", \"grab\", \"hide\", \"miss\", \"permit\", \"quote\", \"recover\", \"resolve\", \"roll\", \"sink\", \"slip\", \"spare\", \"suspect\", \"sweet\", \"swing\", \"twist\", \"upstairs\", \"usual\", \"abroad\", \"brave\", \"calm\", \"concentrate\", \"estimate\", \"grand\", \"male\", \"mine\", \"prompt\", \"quiet\", \"refuse\", \"regret\", \"reveal\", \"rush\", \"shake\", \"shift\", \"shine\", \"steal\", \"suck\", \"surround\", \"bear\", \"brilliant\", \"dare\", \"dear\", \"delay\", \"drunk\", \"female\", \"hurry\", \"inevitable\", \"invite\", \"kiss\", \"neat\", \"pop\", \"punch\", \"quit\", \"reply\", \"representative\", \"resist\", \"rip\", \"rub\", \"silly\", \"smile\", \"spell\", \"stretch\", \"stupid\", \"tear\", \"temporary\", \"tomorrow\", \"wake\", \"wrap\", \"yesterday\", \"Thomas\", \"Tom\", \"Lieuwe\"];\n\n    return capFirst(name1[getRandomInt(0, name1.length + 1)]) + ' ' + capFirst(name2[getRandomInt(0, name2.length + 1)]);\n\n}\n\n\n\n// @ts-ignore\nfunction EdgeCanvasView(props: any) {\n    const canvasStoreExamples = [\n    {\n        \"canvas_id\": \"xyz-000\",\n        \"name\": \"hello world canvas\",\n        // \"description\": \"How, Why and when authored started graph canvas project.\",\n        \"data\": helloWorldStoryData,\n        \"initState\": helloWorldInitState,\n        \"created\": new Date()\n    },\n    // {\n    //     \"canvas_id\": \"xyz-123\",\n    //     \"name\": \"graph canvas author story\",\n    //     // \"description\": \"How, Why and when authored started graph canvas project.\",\n    //     \"data\": authorStoryData,\n    //     \"initState\": authorStoryInitState,\n    //     \"created\": new Date()\n    // },\n    {\n        \"canvas_id\": \"xyz-456\",\n        \"name\": \"story of flights\",\n        \"data\": flightStoryData,\n        \"initState\": flightStoryInitState,\n        \"created\": new Date()\n    },\n\n]\n\n    const [selectedCanvas, setSelectedCanvas] = React.useState(null)\n    const [canvasStore, setCanvasStore] = React.useState(canvasStoreExamples)\n\n    const createNewCanvas = (name: string) => {\n        let canvasStore__ =  JSON.parse(JSON.stringify(canvasStore));\n        const canvas = {\n            \"canvas_id\": name,\n            \"name\": name,\n            \"data\": blankStoryData,\n            \"initState\": blankStoryInitState,\n            \"created\": new Date()\n        }\n        canvasStore__.unshift(canvas,)\n        console.log(\"canvasStore__\", Object.keys(canvasStore__))\n        setCanvasStore(canvasStore__)\n        // @ts-ignore\n        setSelectedCanvas(canvas)\n    }\n\n\n    return <div className=\"container-fluid mt-3\" >\n        <div className=\"row\">\n            <div className=\"col-12\">\n                <nav className=\"navbar navbar-expand-lg border bg-light p-0\">\n                    <div className=\"container-fluid\">\n                        <a className=\"navbar-brand\" href=\"#\">Canvas Store</a>\n                        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\"\n                                data-bs-target=\"#navbarTogglerDemo02\" aria-controls=\"navbarTogglerDemo02\"\n                                aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                            <span className=\"navbar-toggler-icon\"></span>\n                        </button>\n                        <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n                            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n\n                                {\n                                    canvasStore.map((canvas, canvasKey) => {\n\n                                        // @ts-ignore\n                                        return <li key={canvasKey}\n\n                                                   className={\"nav-item nav-link me-3 \" +\n                                                                   // @ts-ignore\n                                                       ((selectedCanvas && selectedCanvas.canvas_id) == canvas.canvas_id ? 'text-success' : '')}\n                                                   style={{\"cursor\": \"pointer\"}}\n                                            // @ts-ignore\n                                                   onClick={() => setSelectedCanvas(canvas)}>{canvas.name}\n                                        </li>\n                                    })\n                                }\n                            </ul>\n                            <form className=\"d-flex\" >\n                                {/*<input className=\"form-control form-control-sm me-2\"*/}\n\n                                {/*       type=\"input\" placeholder=\"start a new fresh canvas\"*/}\n                                {/*       />*/}\n                                <button className=\"btn btn-outline-success btn-sm\"\n                                        onClick={() => createNewCanvas(generateName())}\n                                        type=\"button\"> New canvas\n                                </button>\n                            </form>\n                        </div>\n                    </div>\n                </nav>\n\n            </div>\n            <div className=\"col-12\">\n                {selectedCanvas ?\n                    // @ts-ignore\n                    <GraphCanvas data={selectedCanvas.data}\n                        // @ts-ignore\n                                 initState={selectedCanvas.initState}\n                                 containerId={\"graph-canvas\"}\n                                 width={\"100%\"} height={920}\n                                 welcomeComponent={WelcomeToCanvas}\n                    />\n\n                    :\n                    <React.Fragment />\n                    // <GraphCanvas\n                    //     data={blankStoryData}\n                    //     initState={blankStoryInitState}\n                    //     containerId={\"graph-canvas\"}\n                    //     width={\"100%\"} height={920}\n                    //     welcomeComponent={<WelcomeToCanvas/>}\n                    //\n                    // />\n                }\n\n            </div>\n\n        </div>\n    </div>\n}\n\nEdgeCanvasView.propTypes =\n    {\n        stateManager: PropTypes.any,\n    }\nexport default EdgeCanvasView","import React from \"react\";\nimport ExamplesView from \"./examples\";\nimport EdgeCanvasView from \"./edge\";\nimport PropTypes from \"prop-types\";\n\n\nfunction App() {\n\n    const [selected, setSelected] = React.useState(\"\")\n    return (\n        <main>\n\n            {\n                (selected && selected === \"examples\") ?\n                    <ExamplesView/>\n                    : (selected && selected === \"edge\") ?\n                        <EdgeCanvasView/>\n                        : <div className={\"container-fluid\"}>\n                            <div className=\"row\">\n                                <div className=\"col-12 text-center pt-5 mt-5\">\n                                    <h1 className={\"\"}>Graph Canvas</h1>\n                                    <div className=\"row  align-items-center\">\n                                        <div className=\"col-3\"></div>\n                                        <p className={\"mb-0 col-6   \"}>Interactive graph data visualiser for finding and\n                                            investigating every node and relationship\n                                            between the problem node and the solution node. </p>\n\n                                    </div>\n                                    {/*<div className=\"row\">*/}\n                                    {/*    <div className=\"col-6\">*/}\n                                    <ul className=\"nav  d-flex justify-content-center \">\n                                        <li className=\"nav-item\">\n                                            <a className=\"nav-link text-success cursor-pointer  ps-0\"\n\n                                               onClick={() => setSelected(\"examples\")}>Examples</a>\n                                        </li>\n                                        <li className=\"nav-item \">\n                                            <a className=\"nav-link  text-success \" href=\"#\">| </a>\n                                        </li>\n                                        <li className=\"nav-item    \">\n                                            <a className=\"nav-link  text-success cursor-pointer\"\n                                               onClick={() => setSelected(\"edge\")}\n                                            >Whats cooking? </a>\n                                        </li>\n                                        <li className=\"nav-item\">\n                                            <a className=\"nav-link  text-success \" href=\"#\">| </a>\n                                        </li>\n                                        <li className=\"nav-item\">\n                                            <a className=\"nav-link  text-success \" href=\"#\">MIT License </a>\n                                        </li>\n\n                                    </ul>\n                                    {/*    </div>*/}\n                                    {/*</div>*/}\n\n                                </div>\n                            </div>\n\n                        </div>\n            }\n        </main>\n    )\n}\n\nexport default App;","import React, {StrictMode} from \"react\";\nimport {createRoot} from \"react-dom/client\";\nimport App from \"./views/index\";\n// import App from \"./views\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\n\nroot.render(\n    <StrictMode>\n        <App/>\n    </StrictMode>\n);\n"],"sourceRoot":""}